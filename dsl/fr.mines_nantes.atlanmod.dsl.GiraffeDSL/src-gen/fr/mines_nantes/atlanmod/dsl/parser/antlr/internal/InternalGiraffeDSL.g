/*
* generated by Xtext
*/
grammar InternalGiraffeDSL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package fr.mines_nantes.atlanmod.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.mines_nantes.atlanmod.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.mines_nantes.atlanmod.dsl.services.GiraffeDSLGrammarAccess;

}

@parser::members {

 	private GiraffeDSLGrammarAccess grammarAccess;
 	
    public InternalGiraffeDSLParser(TokenStream input, GiraffeDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "DomainModel";	
   	}
   	
   	@Override
   	protected GiraffeDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDomainModel
entryRuleDomainModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDomainModelRule()); }
	 iv_ruleDomainModel=ruleDomainModel 
	 { $current=$iv_ruleDomainModel.current; } 
	 EOF 
;

// Rule DomainModel
ruleDomainModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getDomainModelAccess().getElementsTypeParserRuleCall_0()); 
	    }
		lv_elements_0_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDomainModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getCreateParserRuleCall_0()); 
    }
    this_Create_0=ruleCreate
    { 
        $current = $this_Create_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getVirtualMachineParserRuleCall_1()); 
    }
    this_VirtualMachine_1=ruleVirtualMachine
    { 
        $current = $this_VirtualMachine_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getCloudProviderParserRuleCall_2()); 
    }
    this_CloudProvider_2=ruleCloudProvider
    { 
        $current = $this_CloudProvider_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getDeployParserRuleCall_3()); 
    }
    this_Deploy_3=ruleDeploy
    { 
        $current = $this_Deploy_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getDeployTypeParserRuleCall_4()); 
    }
    this_DeployType_4=ruleDeployType
    { 
        $current = $this_DeployType_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getDeployAppParserRuleCall_5()); 
    }
    this_DeployApp_5=ruleDeployApp
    { 
        $current = $this_DeployApp_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getMonitorParserRuleCall_6()); 
    }
    this_Monitor_6=ruleMonitor
    { 
        $current = $this_Monitor_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getStressParserRuleCall_7()); 
    }
    this_Stress_7=ruleStress
    { 
        $current = $this_Stress_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getActionParserRuleCall_8()); 
    }
    this_Action_8=ruleAction
    { 
        $current = $this_Action_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCreate
entryRuleCreate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCreateRule()); }
	 iv_ruleCreate=ruleCreate 
	 { $current=$iv_ruleCreate.current; } 
	 EOF 
;

// Rule Create
ruleCreate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='create' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCreateAccess().getCreateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCreateAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCreateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCreateAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateAccess().getVMachineVirtualMachineFeatureParserRuleCall_3_0()); 
	    }
		lv_vMachine_3_0=ruleVirtualMachineFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateRule());
	        }
       		add(
       			$current, 
       			"vMachine",
        		lv_vMachine_3_0, 
        		"VirtualMachineFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateAccess().getInitMachinesInitMachinesFeatureParserRuleCall_4_0()); 
	    }
		lv_initMachines_4_0=ruleInitMachinesFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateRule());
	        }
       		add(
       			$current, 
       			"initMachines",
        		lv_initMachines_4_0, 
        		"InitMachinesFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateAccess().getInitIncrementInitIncrementFeatureParserRuleCall_5_0()); 
	    }
		lv_initIncrement_5_0=ruleInitIncrementFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateRule());
	        }
       		add(
       			$current, 
       			"initIncrement",
        		lv_initIncrement_5_0, 
        		"InitIncrementFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCreateAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleInitMachinesFeature
entryRuleInitMachinesFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitMachinesFeatureRule()); }
	 iv_ruleInitMachinesFeature=ruleInitMachinesFeature 
	 { $current=$iv_ruleInitMachinesFeature.current; } 
	 EOF 
;

// Rule InitMachinesFeature
ruleInitMachinesFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getInitMachinesFeatureAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInitMachinesFeatureRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'initialMachines' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getInitMachinesFeatureAccess().getNameInitialMachinesKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInitMachinesFeatureRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "initialMachines");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInitMachinesFeatureAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_INT
		{
			newLeafNode(lv_type_3_0, grammarAccess.getInitMachinesFeatureAccess().getTypeINTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInitMachinesFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleInitIncrementFeature
entryRuleInitIncrementFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitIncrementFeatureRule()); }
	 iv_ruleInitIncrementFeature=ruleInitIncrementFeature 
	 { $current=$iv_ruleInitIncrementFeature.current; } 
	 EOF 
;

// Rule InitIncrementFeature
ruleInitIncrementFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getInitIncrementFeatureAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInitIncrementFeatureRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'initialIncrement' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getInitIncrementFeatureAccess().getNameInitialIncrementKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInitIncrementFeatureRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "initialIncrement");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInitIncrementFeatureAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_INT
		{
			newLeafNode(lv_type_3_0, grammarAccess.getInitIncrementFeatureAccess().getTypeINTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInitIncrementFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleVirtualMachineFeature
entryRuleVirtualMachineFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVirtualMachineFeatureRule()); }
	 iv_ruleVirtualMachineFeature=ruleVirtualMachineFeature 
	 { $current=$iv_ruleVirtualMachineFeature.current; } 
	 EOF 
;

// Rule VirtualMachineFeature
ruleVirtualMachineFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getVirtualMachineFeatureAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVirtualMachineFeatureRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'vMachine' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getVirtualMachineFeatureAccess().getNameVMachineKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVirtualMachineFeatureRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "vMachine");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVirtualMachineFeatureAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVirtualMachineFeatureRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getVirtualMachineFeatureAccess().getTypeVirtualMachineCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleVirtualMachine
entryRuleVirtualMachine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVirtualMachineRule()); }
	 iv_ruleVirtualMachine=ruleVirtualMachine 
	 { $current=$iv_ruleVirtualMachine.current; } 
	 EOF 
;

// Rule VirtualMachine
ruleVirtualMachine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='virtualMachine' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVirtualMachineAccess().getVirtualMachineKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getVirtualMachineAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVirtualMachineRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVirtualMachineAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVirtualMachineAccess().getVMVirtualMachineTypeFeatureParserRuleCall_3_0()); 
	    }
		lv_vM_3_0=ruleVirtualMachineTypeFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVirtualMachineRule());
	        }
       		add(
       			$current, 
       			"vM",
        		lv_vM_3_0, 
        		"VirtualMachineTypeFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVirtualMachineAccess().getCloudProviderCloudProviderTypeParserRuleCall_4_0()); 
	    }
		lv_cloudProvider_4_0=ruleCloudProviderType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVirtualMachineRule());
	        }
       		add(
       			$current, 
       			"cloudProvider",
        		lv_cloudProvider_4_0, 
        		"CloudProviderType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVirtualMachineAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleVirtualMachineTypeFeature
entryRuleVirtualMachineTypeFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVirtualMachineTypeFeatureRule()); }
	 iv_ruleVirtualMachineTypeFeature=ruleVirtualMachineTypeFeature 
	 { $current=$iv_ruleVirtualMachineTypeFeature.current; } 
	 EOF 
;

// Rule VirtualMachineTypeFeature
ruleVirtualMachineTypeFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getVirtualMachineTypeFeatureAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVirtualMachineTypeFeatureRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'vM' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getVirtualMachineTypeFeatureAccess().getNameVMKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVirtualMachineTypeFeatureRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "vM");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVirtualMachineTypeFeatureAccess().getColonKeyword_2());
    }
(
(
(
		lv_type_3_1=	'Linux1-CloudTest' 
    {
        newLeafNode(lv_type_3_1, grammarAccess.getVirtualMachineTypeFeatureAccess().getTypeLinux1CloudTestKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVirtualMachineTypeFeatureRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_3_1, null);
	    }

    |		lv_type_3_2=	'Small' 
    {
        newLeafNode(lv_type_3_2, grammarAccess.getVirtualMachineTypeFeatureAccess().getTypeSmallKeyword_3_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVirtualMachineTypeFeatureRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_3_2, null);
	    }

)

)
))
;





// Entry rule entryRuleCloudProviderType
entryRuleCloudProviderType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCloudProviderTypeRule()); }
	 iv_ruleCloudProviderType=ruleCloudProviderType 
	 { $current=$iv_ruleCloudProviderType.current; } 
	 EOF 
;

// Rule CloudProviderType
ruleCloudProviderType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getCloudProviderTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudProviderTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'cloudProvider' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getCloudProviderTypeAccess().getNameCloudProviderKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudProviderTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "cloudProvider");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCloudProviderTypeAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudProviderTypeRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getCloudProviderTypeAccess().getTypeCloudProviderCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleCloudProvider
entryRuleCloudProvider returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCloudProviderRule()); }
	 iv_ruleCloudProvider=ruleCloudProvider 
	 { $current=$iv_ruleCloudProvider.current; } 
	 EOF 
;

// Rule CloudProvider
ruleCloudProvider returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='cloudProvider' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCloudProviderAccess().getCloudProviderKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCloudProviderAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudProviderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCloudProviderAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCloudProviderAccess().getCloudTypeCloudTypeParserRuleCall_3_0()); 
	    }
		lv_cloudType_3_0=ruleCloudType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloudProviderRule());
	        }
       		add(
       			$current, 
       			"cloudType",
        		lv_cloudType_3_0, 
        		"CloudType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCloudProviderAccess().getCloudAddressMgmAddressTypeParserRuleCall_4_0()); 
	    }
		lv_cloudAddress_4_0=ruleMgmAddressType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloudProviderRule());
	        }
       		add(
       			$current, 
       			"cloudAddress",
        		lv_cloudAddress_4_0, 
        		"MgmAddressType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCloudProviderAccess().getCloudCredentialCloudCredentialTypeParserRuleCall_5_0()); 
	    }
		lv_cloudCredential_5_0=ruleCloudCredentialType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloudProviderRule());
	        }
       		add(
       			$current, 
       			"cloudCredential",
        		lv_cloudCredential_5_0, 
        		"CloudCredentialType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCloudProviderAccess().getCloudOptionalTypesCloudOptionalTypesParserRuleCall_6_0()); 
	    }
		lv_cloudOptionalTypes_6_0=ruleCloudOptionalTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloudProviderRule());
	        }
       		add(
       			$current, 
       			"cloudOptionalTypes",
        		lv_cloudOptionalTypes_6_0, 
        		"CloudOptionalTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCloudProviderAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleCloudOptionalTypes
entryRuleCloudOptionalTypes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCloudOptionalTypesRule()); }
	 iv_ruleCloudOptionalTypes=ruleCloudOptionalTypes 
	 { $current=$iv_ruleCloudOptionalTypes.current; } 
	 EOF 
;

// Rule CloudOptionalTypes
ruleCloudOptionalTypes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCloudOptionalTypesAccess().getScriptTypeParserRuleCall_0()); 
    }
    this_ScriptType_0=ruleScriptType
    { 
        $current = $this_ScriptType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCloudOptionalTypesAccess().getGeoZoneTypeParserRuleCall_1()); 
    }
    this_GeoZoneType_1=ruleGeoZoneType
    { 
        $current = $this_GeoZoneType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCloudOptionalTypesAccess().getCloudUserTypeParserRuleCall_2()); 
    }
    this_CloudUserType_2=ruleCloudUserType
    { 
        $current = $this_CloudUserType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCloudOptionalTypesAccess().getCloudPasswordTypeParserRuleCall_3()); 
    }
    this_CloudPasswordType_3=ruleCloudPasswordType
    { 
        $current = $this_CloudPasswordType_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCloudType
entryRuleCloudType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCloudTypeRule()); }
	 iv_ruleCloudType=ruleCloudType 
	 { $current=$iv_ruleCloudType.current; } 
	 EOF 
;

// Rule CloudType
ruleCloudType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getCloudTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'cloudType' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getCloudTypeAccess().getNameCloudTypeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "cloudType");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCloudTypeAccess().getColonKeyword_2());
    }
(
(
(
		lv_type_3_1=	'G5000' 
    {
        newLeafNode(lv_type_3_1, grammarAccess.getCloudTypeAccess().getTypeG5000Keyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_3_1, null);
	    }

    |		lv_type_3_2=	'AmazonEC2' 
    {
        newLeafNode(lv_type_3_2, grammarAccess.getCloudTypeAccess().getTypeAmazonEC2Keyword_3_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_3_2, null);
	    }

    |		lv_type_3_3=	'Google' 
    {
        newLeafNode(lv_type_3_3, grammarAccess.getCloudTypeAccess().getTypeGoogleKeyword_3_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_3_3, null);
	    }

    |		lv_type_3_4=	'VirtualBox' 
    {
        newLeafNode(lv_type_3_4, grammarAccess.getCloudTypeAccess().getTypeVirtualBoxKeyword_3_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_3_4, null);
	    }

)

)
))
;





// Entry rule entryRuleScriptType
entryRuleScriptType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScriptTypeRule()); }
	 iv_ruleScriptType=ruleScriptType 
	 { $current=$iv_ruleScriptType.current; } 
	 EOF 
;

// Rule ScriptType
ruleScriptType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getScriptTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScriptTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'newMachinesScript' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getScriptTypeAccess().getNameNewMachinesScriptKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScriptTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "newMachinesScript");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScriptTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getScriptTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScriptTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleGeoZoneType
entryRuleGeoZoneType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoZoneTypeRule()); }
	 iv_ruleGeoZoneType=ruleGeoZoneType 
	 { $current=$iv_ruleGeoZoneType.current; } 
	 EOF 
;

// Rule GeoZoneType
ruleGeoZoneType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getGeoZoneTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeoZoneTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'geoZone' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getGeoZoneTypeAccess().getNameGeoZoneKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeoZoneTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "geoZone");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGeoZoneTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getGeoZoneTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeoZoneTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleMgmAddressType
entryRuleMgmAddressType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMgmAddressTypeRule()); }
	 iv_ruleMgmAddressType=ruleMgmAddressType 
	 { $current=$iv_ruleMgmAddressType.current; } 
	 EOF 
;

// Rule MgmAddressType
ruleMgmAddressType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getMgmAddressTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMgmAddressTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'cloudMgmAddress' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getMgmAddressTypeAccess().getNameCloudMgmAddressKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMgmAddressTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "cloudMgmAddress");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMgmAddressTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getMgmAddressTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMgmAddressTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleCloudCredentialType
entryRuleCloudCredentialType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCloudCredentialTypeRule()); }
	 iv_ruleCloudCredentialType=ruleCloudCredentialType 
	 { $current=$iv_ruleCloudCredentialType.current; } 
	 EOF 
;

// Rule CloudCredentialType
ruleCloudCredentialType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getCloudCredentialTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudCredentialTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'cloudCredential' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getCloudCredentialTypeAccess().getNameCloudCredentialKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudCredentialTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "cloudCredential");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCloudCredentialTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getCloudCredentialTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudCredentialTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleCloudUserType
entryRuleCloudUserType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCloudUserTypeRule()); }
	 iv_ruleCloudUserType=ruleCloudUserType 
	 { $current=$iv_ruleCloudUserType.current; } 
	 EOF 
;

// Rule CloudUserType
ruleCloudUserType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getCloudUserTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudUserTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'cloudUser' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getCloudUserTypeAccess().getNameCloudUserKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudUserTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "cloudUser");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCloudUserTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getCloudUserTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudUserTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleCloudPasswordType
entryRuleCloudPasswordType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCloudPasswordTypeRule()); }
	 iv_ruleCloudPasswordType=ruleCloudPasswordType 
	 { $current=$iv_ruleCloudPasswordType.current; } 
	 EOF 
;

// Rule CloudPasswordType
ruleCloudPasswordType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getCloudPasswordTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudPasswordTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'cloudPassword' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getCloudPasswordTypeAccess().getNameCloudPasswordKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudPasswordTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "cloudPassword");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCloudPasswordTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getCloudPasswordTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudPasswordTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleDeploy
entryRuleDeploy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeployRule()); }
	 iv_ruleDeploy=ruleDeploy 
	 { $current=$iv_ruleDeploy.current; } 
	 EOF 
;

// Rule Deploy
ruleDeploy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='deploy' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeployAccess().getDeployKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDeployAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeployAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeployAccess().getDeployOneDeployAppFeatureParserRuleCall_3_0()); 
	    }
		lv_deployOne_3_0=ruleDeployAppFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeployRule());
	        }
       		add(
       			$current, 
       			"deployOne",
        		lv_deployOne_3_0, 
        		"DeployAppFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDeployAccess().getDeployTwoDeployTypeFeatureParserRuleCall_4_0()); 
	    }
		lv_deployTwo_4_0=ruleDeployTypeFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeployRule());
	        }
       		add(
       			$current, 
       			"deployTwo",
        		lv_deployTwo_4_0, 
        		"DeployTypeFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDeployAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleDeployAppFeature
entryRuleDeployAppFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeployAppFeatureRule()); }
	 iv_ruleDeployAppFeature=ruleDeployAppFeature 
	 { $current=$iv_ruleDeployAppFeature.current; } 
	 EOF 
;

// Rule DeployAppFeature
ruleDeployAppFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getDeployAppFeatureAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployAppFeatureRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'deployApp' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getDeployAppFeatureAccess().getNameDeployAppKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployAppFeatureRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "deployApp");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeployAppFeatureAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployAppFeatureRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getDeployAppFeatureAccess().getTypeDeployAppCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleDeployTypeFeature
entryRuleDeployTypeFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeployTypeFeatureRule()); }
	 iv_ruleDeployTypeFeature=ruleDeployTypeFeature 
	 { $current=$iv_ruleDeployTypeFeature.current; } 
	 EOF 
;

// Rule DeployTypeFeature
ruleDeployTypeFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getDeployTypeFeatureAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployTypeFeatureRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'deployType' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getDeployTypeFeatureAccess().getNameDeployTypeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployTypeFeatureRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "deployType");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeployTypeFeatureAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployTypeFeatureRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getDeployTypeFeatureAccess().getTypeDeployTypeCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleDeployType
entryRuleDeployType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeployTypeRule()); }
	 iv_ruleDeployType=ruleDeployType 
	 { $current=$iv_ruleDeployType.current; } 
	 EOF 
;

// Rule DeployType
ruleDeployType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='deployType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeployTypeAccess().getDeployTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDeployTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeployTypeAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeployTypeAccess().getRangeDeployRangeTypeParserRuleCall_3_0()); 
	    }
		lv_range_3_0=ruleDeployRangeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeployTypeRule());
	        }
       		add(
       			$current, 
       			"range",
        		lv_range_3_0, 
        		"DeployRangeType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDeployTypeAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleDeployRangeType
entryRuleDeployRangeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeployRangeTypeRule()); }
	 iv_ruleDeployRangeType=ruleDeployRangeType 
	 { $current=$iv_ruleDeployRangeType.current; } 
	 EOF 
;

// Rule DeployRangeType
ruleDeployRangeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getDeployRangeTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployRangeTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'range' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getDeployRangeTypeAccess().getNameRangeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployRangeTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "range");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeployRangeTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getDeployRangeTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployRangeTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleDeployApp
entryRuleDeployApp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeployAppRule()); }
	 iv_ruleDeployApp=ruleDeployApp 
	 { $current=$iv_ruleDeployApp.current; } 
	 EOF 
;

// Rule DeployApp
ruleDeployApp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='deployApp' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeployAppAccess().getDeployAppKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDeployAppAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployAppRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeployAppAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeployAppAccess().getClassDeployAppClassTypeParserRuleCall_3_0()); 
	    }
		lv_class_3_0=ruleDeployAppClassType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeployAppRule());
	        }
       		add(
       			$current, 
       			"class",
        		lv_class_3_0, 
        		"DeployAppClassType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDeployAppAccess().getDeployMasterMethodDeployAppMasterMethodTypeParserRuleCall_4_0()); 
	    }
		lv_deployMasterMethod_4_0=ruleDeployAppMasterMethodType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeployAppRule());
	        }
       		add(
       			$current, 
       			"deployMasterMethod",
        		lv_deployMasterMethod_4_0, 
        		"DeployAppMasterMethodType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDeployAppAccess().getDeploySlaveMethodDeployAppSlaveMethodTypeParserRuleCall_5_0()); 
	    }
		lv_deploySlaveMethod_5_0=ruleDeployAppSlaveMethodType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeployAppRule());
	        }
       		add(
       			$current, 
       			"deploySlaveMethod",
        		lv_deploySlaveMethod_5_0, 
        		"DeployAppSlaveMethodType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDeployAppAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleDeployAppClassType
entryRuleDeployAppClassType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeployAppClassTypeRule()); }
	 iv_ruleDeployAppClassType=ruleDeployAppClassType 
	 { $current=$iv_ruleDeployAppClassType.current; } 
	 EOF 
;

// Rule DeployAppClassType
ruleDeployAppClassType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getDeployAppClassTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployAppClassTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'class' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getDeployAppClassTypeAccess().getNameClassKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployAppClassTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "class");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeployAppClassTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getDeployAppClassTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployAppClassTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleDeployAppMasterMethodType
entryRuleDeployAppMasterMethodType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeployAppMasterMethodTypeRule()); }
	 iv_ruleDeployAppMasterMethodType=ruleDeployAppMasterMethodType 
	 { $current=$iv_ruleDeployAppMasterMethodType.current; } 
	 EOF 
;

// Rule DeployAppMasterMethodType
ruleDeployAppMasterMethodType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getDeployAppMasterMethodTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployAppMasterMethodTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'deployMasterMethod' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getDeployAppMasterMethodTypeAccess().getNameDeployMasterMethodKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployAppMasterMethodTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "deployMasterMethod");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeployAppMasterMethodTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getDeployAppMasterMethodTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployAppMasterMethodTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleDeployAppSlaveMethodType
entryRuleDeployAppSlaveMethodType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeployAppSlaveMethodTypeRule()); }
	 iv_ruleDeployAppSlaveMethodType=ruleDeployAppSlaveMethodType 
	 { $current=$iv_ruleDeployAppSlaveMethodType.current; } 
	 EOF 
;

// Rule DeployAppSlaveMethodType
ruleDeployAppSlaveMethodType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getDeployAppSlaveMethodTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployAppSlaveMethodTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'deploySlaveMethod' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getDeployAppSlaveMethodTypeAccess().getNameDeploySlaveMethodKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployAppSlaveMethodTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "deploySlaveMethod");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeployAppSlaveMethodTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getDeployAppSlaveMethodTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployAppSlaveMethodTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleMonitor
entryRuleMonitor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMonitorRule()); }
	 iv_ruleMonitor=ruleMonitor 
	 { $current=$iv_ruleMonitor.current; } 
	 EOF 
;

// Rule Monitor
ruleMonitor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='monitor' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMonitorAccess().getMonitorKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMonitorAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonitorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMonitorAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMonitorAccess().getRangeMonitorRangeTypeParserRuleCall_3_0()); 
	    }
		lv_range_3_0=ruleMonitorRangeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMonitorRule());
	        }
       		add(
       			$current, 
       			"range",
        		lv_range_3_0, 
        		"MonitorRangeType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMonitorAccess().getMonitoringTypeMonitoringTypeParserRuleCall_4_0()); 
	    }
		lv_monitoringType_4_0=ruleMonitoringType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMonitorRule());
	        }
       		add(
       			$current, 
       			"monitoringType",
        		lv_monitoringType_4_0, 
        		"MonitoringType");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMonitorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleMonitorRangeType
entryRuleMonitorRangeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMonitorRangeTypeRule()); }
	 iv_ruleMonitorRangeType=ruleMonitorRangeType 
	 { $current=$iv_ruleMonitorRangeType.current; } 
	 EOF 
;

// Rule MonitorRangeType
ruleMonitorRangeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getMonitorRangeTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonitorRangeTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'range' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getMonitorRangeTypeAccess().getNameRangeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonitorRangeTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "range");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMonitorRangeTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getMonitorRangeTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonitorRangeTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleMonitoringType
entryRuleMonitoringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMonitoringTypeRule()); }
	 iv_ruleMonitoringType=ruleMonitoringType 
	 { $current=$iv_ruleMonitoringType.current; } 
	 EOF 
;

// Rule MonitoringType
ruleMonitoringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getMonitoringTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonitoringTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'monitoringType' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getMonitoringTypeAccess().getNameMonitoringTypeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonitoringTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "monitoringType");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMonitoringTypeAccess().getColonKeyword_2());
    }
(
(
(
		lv_type_3_1=	'reactive' 
    {
        newLeafNode(lv_type_3_1, grammarAccess.getMonitoringTypeAccess().getTypeReactiveKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonitoringTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_3_1, null);
	    }

    |		lv_type_3_2=	'predictive' 
    {
        newLeafNode(lv_type_3_2, grammarAccess.getMonitoringTypeAccess().getTypePredictiveKeyword_3_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonitoringTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_3_2, null);
	    }

)

)
))
;





// Entry rule entryRuleStress
entryRuleStress returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStressRule()); }
	 iv_ruleStress=ruleStress 
	 { $current=$iv_ruleStress.current; } 
	 EOF 
;

// Rule Stress
ruleStress returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='stress' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStressAccess().getStressKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStressAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStressRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStressAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStressAccess().getRangeStressRangeTypeParserRuleCall_3_0()); 
	    }
		lv_range_3_0=ruleStressRangeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStressRule());
	        }
       		add(
       			$current, 
       			"range",
        		lv_range_3_0, 
        		"StressRangeType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStressAccess().getStressClassStressClassTypeParserRuleCall_4_0()); 
	    }
		lv_stressClass_4_0=ruleStressClassType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStressRule());
	        }
       		add(
       			$current, 
       			"stressClass",
        		lv_stressClass_4_0, 
        		"StressClassType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getStressAccess().getStressMethodStressMethodTypeParserRuleCall_5_0()); 
	    }
		lv_stressMethod_5_0=ruleStressMethodType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStressRule());
	        }
       		add(
       			$current, 
       			"stressMethod",
        		lv_stressMethod_5_0, 
        		"StressMethodType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStressAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleStressRangeType
entryRuleStressRangeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStressRangeTypeRule()); }
	 iv_ruleStressRangeType=ruleStressRangeType 
	 { $current=$iv_ruleStressRangeType.current; } 
	 EOF 
;

// Rule StressRangeType
ruleStressRangeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getStressRangeTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStressRangeTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'range' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getStressRangeTypeAccess().getNameRangeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStressRangeTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "range");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStressRangeTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getStressRangeTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStressRangeTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleStressClassType
entryRuleStressClassType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStressClassTypeRule()); }
	 iv_ruleStressClassType=ruleStressClassType 
	 { $current=$iv_ruleStressClassType.current; } 
	 EOF 
;

// Rule StressClassType
ruleStressClassType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getStressClassTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStressClassTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'stressClass' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getStressClassTypeAccess().getNameStressClassKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStressClassTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "stressClass");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStressClassTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getStressClassTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStressClassTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleStressMethodType
entryRuleStressMethodType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStressMethodTypeRule()); }
	 iv_ruleStressMethodType=ruleStressMethodType 
	 { $current=$iv_ruleStressMethodType.current; } 
	 EOF 
;

// Rule StressMethodType
ruleStressMethodType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getStressMethodTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStressMethodTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'stressMethod' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getStressMethodTypeAccess().getNameStressMethodKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStressMethodTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "stressMethod");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStressMethodTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getStressMethodTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStressMethodTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	 iv_ruleAction=ruleAction 
	 { $current=$iv_ruleAction.current; } 
	 EOF 
;

// Rule Action
ruleAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='action' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getActionAccess().getActionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getRangeActionRangeTypeParserRuleCall_3_0()); 
	    }
		lv_range_3_0=ruleActionRangeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		add(
       			$current, 
       			"range",
        		lv_range_3_0, 
        		"ActionRangeType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getClassActionClassTypeParserRuleCall_4_0()); 
	    }
		lv_class_4_0=ruleActionClassType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		add(
       			$current, 
       			"class",
        		lv_class_4_0, 
        		"ActionClassType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getMethodActionMethodTypeParserRuleCall_5_0()); 
	    }
		lv_method_5_0=ruleActionMethodType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		add(
       			$current, 
       			"method",
        		lv_method_5_0, 
        		"ActionMethodType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getActionAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleActionRangeType
entryRuleActionRangeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionRangeTypeRule()); }
	 iv_ruleActionRangeType=ruleActionRangeType 
	 { $current=$iv_ruleActionRangeType.current; } 
	 EOF 
;

// Rule ActionRangeType
ruleActionRangeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getActionRangeTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionRangeTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'range' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getActionRangeTypeAccess().getNameRangeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionRangeTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "range");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActionRangeTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getActionRangeTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionRangeTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleActionClassType
entryRuleActionClassType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionClassTypeRule()); }
	 iv_ruleActionClassType=ruleActionClassType 
	 { $current=$iv_ruleActionClassType.current; } 
	 EOF 
;

// Rule ActionClassType
ruleActionClassType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getActionClassTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionClassTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'class' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getActionClassTypeAccess().getNameClassKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionClassTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "class");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActionClassTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getActionClassTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionClassTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleActionMethodType
entryRuleActionMethodType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionMethodTypeRule()); }
	 iv_ruleActionMethodType=ruleActionMethodType 
	 { $current=$iv_ruleActionMethodType.current; } 
	 EOF 
;

// Rule ActionMethodType
ruleActionMethodType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getActionMethodTypeAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionMethodTypeRule());
	        }
       		setWithLastConsumed($current, "many", lv_many_0_0, "many");
	    }

)
)?(
(
		lv_name_1_0=	'method' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getActionMethodTypeAccess().getNameMethodKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionMethodTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "method");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActionMethodTypeAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getActionMethodTypeAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionMethodTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
))
;









RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


