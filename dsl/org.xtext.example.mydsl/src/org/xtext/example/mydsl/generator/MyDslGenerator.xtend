/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import org.xtext.example.mydsl.myDsl.Create
import org.xtext.example.mydsl.myDsl.Deploy
import org.xtext.example.mydsl.myDsl.VirtualMachine
import org.xtext.example.mydsl.myDsl.CloudProvider
import org.xtext.example.mydsl.myDsl.DeployType
import org.xtext.example.mydsl.myDsl.DeployApp
import org.xtext.example.mydsl.myDsl.Monitor
import org.xtext.example.mydsl.myDsl.Stress
import org.xtext.example.mydsl.myDsl.Action

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class MyDslGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		for (c: resource.allContents.toIterable.filter(Create)) {
			fsa.generateFile(
				c.name.toString()+".java", c.toString
			);
		}
		
		for (d: resource.allContents.toIterable.filter(Deploy)) {
			fsa.generateFile(
				d.name.toString()+".java", d.toString
			);
		}
		
		for (v: resource.allContents.toIterable.filter(VirtualMachine)) {
			fsa.generateFile(
				v.name.toString()+".java", v.toString
			);
		}
		
		for (cl: resource.allContents.toIterable.filter(CloudProvider)) {
			fsa.generateFile(
				cl.name.toString()+".java", cl.toString
			);
		}
		
		for (dt: resource.allContents.toIterable.filter(DeployType)) {
			fsa.generateFile(
				dt.name.toString()+".java", dt.toString
			);
		}
		
		for (da: resource.allContents.toIterable.filter(DeployApp)) {
			fsa.generateFile(
				da.name.toString()+".java", da.toString
			);
		}
		
		for (m: resource.allContents.toIterable.filter(Monitor)) {
			fsa.generateFile(
				m.name.toString()+".java", m.toString
			);
		}
		
		for (s: resource.allContents.toIterable.filter(Stress)) {
			fsa.generateFile(
				s.name.toString()+".java", s.toString
			);
		}
		
		for (a: resource.allContents.toIterable.filter(Action)) {
			fsa.generateFile(
				a.name.toString()+".java", a.toString
			);
		}
	}
	/*
	
   def compile(Entity e) ''' 
    «IF e.eContainer.fullyQualifiedName != null»
      package «e.eContainer.fullyQualifiedName»;
    «ENDIF»
    
    public class «e.name» «IF e.superType != null
            »extends «e.superType.fullyQualifiedName» «ENDIF»{
      «FOR f:e.features»
        «f.compile»
      «ENDFOR»
    }
  '''
 
  def compile(Feature f) '''
    private «f.type.fullyQualifiedName» «f.name»;
    
    public «f.type.fullyQualifiedName» get«f.name.toFirstUpper»() {
      return «f.name»;
    }
    
    public void set«f.name.toFirstUpper»(«f.type.fullyQualifiedName» «f.name») {
      this.«f.name» = «f.name»;
    }
  '''
  * 
  */
}
