/*
* generated by Xtext
*/
package org.xtext.example.mydsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DomainModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DomainModel");
		private final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementsTypeParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);
		
		//DomainModel:
		//	elements+=Type*;
		public ParserRule getRule() { return rule; }

		//elements+=Type*
		public Assignment getElementsAssignment() { return cElementsAssignment; }

		//Type
		public RuleCall getElementsTypeParserRuleCall_0() { return cElementsTypeParserRuleCall_0; }
	}

	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCreateParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVirtualMachineParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCloudProviderParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDeployParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cDeployTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cDeployAppParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cMonitorParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cStressParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cActionParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		//Type:
		//	Create | VirtualMachine | CloudProvider | Deploy | DeployType | DeployApp | Monitor | Stress | Action;
		public ParserRule getRule() { return rule; }

		//Create | VirtualMachine | CloudProvider | Deploy | DeployType | DeployApp | Monitor | Stress | Action
		public Alternatives getAlternatives() { return cAlternatives; }

		//Create
		public RuleCall getCreateParserRuleCall_0() { return cCreateParserRuleCall_0; }

		//VirtualMachine
		public RuleCall getVirtualMachineParserRuleCall_1() { return cVirtualMachineParserRuleCall_1; }

		//CloudProvider
		public RuleCall getCloudProviderParserRuleCall_2() { return cCloudProviderParserRuleCall_2; }

		//Deploy
		public RuleCall getDeployParserRuleCall_3() { return cDeployParserRuleCall_3; }

		//DeployType
		public RuleCall getDeployTypeParserRuleCall_4() { return cDeployTypeParserRuleCall_4; }

		//DeployApp
		public RuleCall getDeployAppParserRuleCall_5() { return cDeployAppParserRuleCall_5; }

		//Monitor
		public RuleCall getMonitorParserRuleCall_6() { return cMonitorParserRuleCall_6; }

		//Stress
		public RuleCall getStressParserRuleCall_7() { return cStressParserRuleCall_7; }

		//Action
		public RuleCall getActionParserRuleCall_8() { return cActionParserRuleCall_8; }
	}

	public class CreateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Create");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCreateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVMachineAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVMachineVirtualMachineFeatureParserRuleCall_3_0 = (RuleCall)cVMachineAssignment_3.eContents().get(0);
		private final Assignment cInitMachinesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInitMachinesInitMachinesFeatureParserRuleCall_4_0 = (RuleCall)cInitMachinesAssignment_4.eContents().get(0);
		private final Assignment cInitIncrementAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInitIncrementInitIncrementFeatureParserRuleCall_5_0 = (RuleCall)cInitIncrementAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		///////
		//// Create definitions
		//////
		//Create:
		//	"create" name=ID "{" vMachine+=VirtualMachineFeature initMachines+=InitMachinesFeature
		//	initIncrement+=InitIncrementFeature "}";
		public ParserRule getRule() { return rule; }

		//"create" name=ID "{" vMachine+=VirtualMachineFeature initMachines+=InitMachinesFeature
		//initIncrement+=InitIncrementFeature "}"
		public Group getGroup() { return cGroup; }

		//"create"
		public Keyword getCreateKeyword_0() { return cCreateKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//vMachine+=VirtualMachineFeature
		public Assignment getVMachineAssignment_3() { return cVMachineAssignment_3; }

		//VirtualMachineFeature
		public RuleCall getVMachineVirtualMachineFeatureParserRuleCall_3_0() { return cVMachineVirtualMachineFeatureParserRuleCall_3_0; }

		//initMachines+=InitMachinesFeature
		public Assignment getInitMachinesAssignment_4() { return cInitMachinesAssignment_4; }

		//InitMachinesFeature
		public RuleCall getInitMachinesInitMachinesFeatureParserRuleCall_4_0() { return cInitMachinesInitMachinesFeatureParserRuleCall_4_0; }

		//initIncrement+=InitIncrementFeature
		public Assignment getInitIncrementAssignment_5() { return cInitIncrementAssignment_5; }

		//InitIncrementFeature
		public RuleCall getInitIncrementInitIncrementFeatureParserRuleCall_5_0() { return cInitIncrementInitIncrementFeatureParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class InitMachinesFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InitMachinesFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameInitialMachinesKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeINTTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//InitMachinesFeature:
		//	many="many"? name="initialMachines" ":" type=INT;
		public ParserRule getRule() { return rule; }

		//many="many"? name="initialMachines" ":" type=INT
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="initialMachines"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"initialMachines"
		public Keyword getNameInitialMachinesKeyword_1_0() { return cNameInitialMachinesKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=INT
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//INT
		public RuleCall getTypeINTTerminalRuleCall_3_0() { return cTypeINTTerminalRuleCall_3_0; }
	}

	public class InitIncrementFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InitIncrementFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameInitialIncrementKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeINTTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//InitIncrementFeature:
		//	many="many"? name="initialIncrement" ":" type=INT;
		public ParserRule getRule() { return rule; }

		//many="many"? name="initialIncrement" ":" type=INT
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="initialIncrement"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"initialIncrement"
		public Keyword getNameInitialIncrementKeyword_1_0() { return cNameInitialIncrementKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=INT
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//INT
		public RuleCall getTypeINTTerminalRuleCall_3_0() { return cTypeINTTerminalRuleCall_3_0; }
	}

	public class VirtualMachineFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VirtualMachineFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameVMachineKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeVirtualMachineCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeVirtualMachineIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeVirtualMachineCrossReference_3_0.eContents().get(1);
		
		//VirtualMachineFeature:
		//	many="many"? name="vMachine" ":" type=[VirtualMachine];
		public ParserRule getRule() { return rule; }

		//many="many"? name="vMachine" ":" type=[VirtualMachine]
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="vMachine"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"vMachine"
		public Keyword getNameVMachineKeyword_1_0() { return cNameVMachineKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=[VirtualMachine]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[VirtualMachine]
		public CrossReference getTypeVirtualMachineCrossReference_3_0() { return cTypeVirtualMachineCrossReference_3_0; }

		//ID
		public RuleCall getTypeVirtualMachineIDTerminalRuleCall_3_0_1() { return cTypeVirtualMachineIDTerminalRuleCall_3_0_1; }
	}

	public class VirtualMachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VirtualMachine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVirtualMachineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVMAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVMVirtualMachineTypeFeatureParserRuleCall_3_0 = (RuleCall)cVMAssignment_3.eContents().get(0);
		private final Assignment cCloudProviderAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCloudProviderCloudProviderTypeParserRuleCall_4_0 = (RuleCall)cCloudProviderAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//VirtualMachine:
		//	"virtualMachine" name=ID "{" vM+=VirtualMachineTypeFeature cloudProvider+=CloudProviderType "}";
		public ParserRule getRule() { return rule; }

		//"virtualMachine" name=ID "{" vM+=VirtualMachineTypeFeature cloudProvider+=CloudProviderType "}"
		public Group getGroup() { return cGroup; }

		//"virtualMachine"
		public Keyword getVirtualMachineKeyword_0() { return cVirtualMachineKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//vM+=VirtualMachineTypeFeature
		public Assignment getVMAssignment_3() { return cVMAssignment_3; }

		//VirtualMachineTypeFeature
		public RuleCall getVMVirtualMachineTypeFeatureParserRuleCall_3_0() { return cVMVirtualMachineTypeFeatureParserRuleCall_3_0; }

		//cloudProvider+=CloudProviderType
		public Assignment getCloudProviderAssignment_4() { return cCloudProviderAssignment_4; }

		//CloudProviderType
		public RuleCall getCloudProviderCloudProviderTypeParserRuleCall_4_0() { return cCloudProviderCloudProviderTypeParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class VirtualMachineTypeFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VirtualMachineTypeFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameVMKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cTypeAlternatives_3_0 = (Alternatives)cTypeAssignment_3.eContents().get(0);
		private final Keyword cTypeLinux1CloudTestKeyword_3_0_0 = (Keyword)cTypeAlternatives_3_0.eContents().get(0);
		private final Keyword cTypeSmallKeyword_3_0_1 = (Keyword)cTypeAlternatives_3_0.eContents().get(1);
		
		//VirtualMachineTypeFeature:
		//	many="many"? name="vM" ":" type=("Linux1-CloudTest" | "Small");
		public ParserRule getRule() { return rule; }

		//many="many"? name="vM" ":" type=("Linux1-CloudTest" | "Small")
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="vM"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"vM"
		public Keyword getNameVMKeyword_1_0() { return cNameVMKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=("Linux1-CloudTest" | "Small")
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//"Linux1-CloudTest" | "Small"
		public Alternatives getTypeAlternatives_3_0() { return cTypeAlternatives_3_0; }

		//"Linux1-CloudTest"
		public Keyword getTypeLinux1CloudTestKeyword_3_0_0() { return cTypeLinux1CloudTestKeyword_3_0_0; }

		//"Small"
		public Keyword getTypeSmallKeyword_3_0_1() { return cTypeSmallKeyword_3_0_1; }
	}

	public class CloudProviderTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CloudProviderType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameCloudProviderKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeCloudProviderCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeCloudProviderIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeCloudProviderCrossReference_3_0.eContents().get(1);
		
		//CloudProviderType:
		//	many="many"? name="cloudProvider" ":" type=[CloudProvider];
		public ParserRule getRule() { return rule; }

		//many="many"? name="cloudProvider" ":" type=[CloudProvider]
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="cloudProvider"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"cloudProvider"
		public Keyword getNameCloudProviderKeyword_1_0() { return cNameCloudProviderKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=[CloudProvider]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[CloudProvider]
		public CrossReference getTypeCloudProviderCrossReference_3_0() { return cTypeCloudProviderCrossReference_3_0; }

		//ID
		public RuleCall getTypeCloudProviderIDTerminalRuleCall_3_0_1() { return cTypeCloudProviderIDTerminalRuleCall_3_0_1; }
	}

	public class CloudProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CloudProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCloudProviderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCloudTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCloudTypeCloudTypeParserRuleCall_3_0 = (RuleCall)cCloudTypeAssignment_3.eContents().get(0);
		private final Assignment cCloudAddressAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCloudAddressMgmAddressTypeParserRuleCall_4_0 = (RuleCall)cCloudAddressAssignment_4.eContents().get(0);
		private final Assignment cCloudCredentialAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCloudCredentialCloudCredentialTypeParserRuleCall_5_0 = (RuleCall)cCloudCredentialAssignment_5.eContents().get(0);
		private final Assignment cCloudOptionalTypesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cCloudOptionalTypesCloudOptionalTypesParserRuleCall_6_0 = (RuleCall)cCloudOptionalTypesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//CloudProvider:
		//	"cloudProvider" name=ID "{" cloudType+=CloudType cloudAddress+=MgmAddressType cloudCredential+=CloudCredentialType
		//	cloudOptionalTypes+=CloudOptionalTypes* "}";
		public ParserRule getRule() { return rule; }

		//"cloudProvider" name=ID "{" cloudType+=CloudType cloudAddress+=MgmAddressType cloudCredential+=CloudCredentialType
		//cloudOptionalTypes+=CloudOptionalTypes* "}"
		public Group getGroup() { return cGroup; }

		//"cloudProvider"
		public Keyword getCloudProviderKeyword_0() { return cCloudProviderKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//cloudType+=CloudType
		public Assignment getCloudTypeAssignment_3() { return cCloudTypeAssignment_3; }

		//CloudType
		public RuleCall getCloudTypeCloudTypeParserRuleCall_3_0() { return cCloudTypeCloudTypeParserRuleCall_3_0; }

		//cloudAddress+=MgmAddressType
		public Assignment getCloudAddressAssignment_4() { return cCloudAddressAssignment_4; }

		//MgmAddressType
		public RuleCall getCloudAddressMgmAddressTypeParserRuleCall_4_0() { return cCloudAddressMgmAddressTypeParserRuleCall_4_0; }

		//cloudCredential+=CloudCredentialType
		public Assignment getCloudCredentialAssignment_5() { return cCloudCredentialAssignment_5; }

		//CloudCredentialType
		public RuleCall getCloudCredentialCloudCredentialTypeParserRuleCall_5_0() { return cCloudCredentialCloudCredentialTypeParserRuleCall_5_0; }

		//cloudOptionalTypes+=CloudOptionalTypes*
		public Assignment getCloudOptionalTypesAssignment_6() { return cCloudOptionalTypesAssignment_6; }

		//CloudOptionalTypes
		public RuleCall getCloudOptionalTypesCloudOptionalTypesParserRuleCall_6_0() { return cCloudOptionalTypesCloudOptionalTypesParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class CloudOptionalTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CloudOptionalTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cScriptTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGeoZoneTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCloudUserTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cCloudPasswordTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//CloudOptionalTypes:
		//	ScriptType | GeoZoneType | CloudUserType | CloudPasswordType;
		public ParserRule getRule() { return rule; }

		//ScriptType | GeoZoneType | CloudUserType | CloudPasswordType
		public Alternatives getAlternatives() { return cAlternatives; }

		//ScriptType
		public RuleCall getScriptTypeParserRuleCall_0() { return cScriptTypeParserRuleCall_0; }

		//GeoZoneType
		public RuleCall getGeoZoneTypeParserRuleCall_1() { return cGeoZoneTypeParserRuleCall_1; }

		//CloudUserType
		public RuleCall getCloudUserTypeParserRuleCall_2() { return cCloudUserTypeParserRuleCall_2; }

		//CloudPasswordType
		public RuleCall getCloudPasswordTypeParserRuleCall_3() { return cCloudPasswordTypeParserRuleCall_3; }
	}

	public class CloudTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CloudType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameCloudTypeKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cTypeAlternatives_3_0 = (Alternatives)cTypeAssignment_3.eContents().get(0);
		private final Keyword cTypeG5000Keyword_3_0_0 = (Keyword)cTypeAlternatives_3_0.eContents().get(0);
		private final Keyword cTypeAmazonEC2Keyword_3_0_1 = (Keyword)cTypeAlternatives_3_0.eContents().get(1);
		private final Keyword cTypeGoogleKeyword_3_0_2 = (Keyword)cTypeAlternatives_3_0.eContents().get(2);
		private final Keyword cTypeVirtualBoxKeyword_3_0_3 = (Keyword)cTypeAlternatives_3_0.eContents().get(3);
		
		//CloudType:
		//	many="many"? name="cloudType" ":" type=("G5000" | "AmazonEC2" | "Google" | "VirtualBox");
		public ParserRule getRule() { return rule; }

		//many="many"? name="cloudType" ":" type=("G5000" | "AmazonEC2" | "Google" | "VirtualBox")
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="cloudType"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"cloudType"
		public Keyword getNameCloudTypeKeyword_1_0() { return cNameCloudTypeKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=("G5000" | "AmazonEC2" | "Google" | "VirtualBox")
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//"G5000" | "AmazonEC2" | "Google" | "VirtualBox"
		public Alternatives getTypeAlternatives_3_0() { return cTypeAlternatives_3_0; }

		//"G5000"
		public Keyword getTypeG5000Keyword_3_0_0() { return cTypeG5000Keyword_3_0_0; }

		//"AmazonEC2"
		public Keyword getTypeAmazonEC2Keyword_3_0_1() { return cTypeAmazonEC2Keyword_3_0_1; }

		//"Google"
		public Keyword getTypeGoogleKeyword_3_0_2() { return cTypeGoogleKeyword_3_0_2; }

		//"VirtualBox"
		public Keyword getTypeVirtualBoxKeyword_3_0_3() { return cTypeVirtualBoxKeyword_3_0_3; }
	}

	public class ScriptTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ScriptType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameNewMachinesScriptKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//ScriptType:
		//	many="many"? name="newMachinesScript" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="newMachinesScript" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="newMachinesScript"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"newMachinesScript"
		public Keyword getNameNewMachinesScriptKeyword_1_0() { return cNameNewMachinesScriptKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class GeoZoneTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoZoneType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameGeoZoneKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//GeoZoneType:
		//	many="many"? name="geoZone" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="geoZone" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="geoZone"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"geoZone"
		public Keyword getNameGeoZoneKeyword_1_0() { return cNameGeoZoneKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class MgmAddressTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MgmAddressType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameCloudMgmAddressKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//MgmAddressType:
		//	many="many"? name="cloudMgmAddress" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="cloudMgmAddress" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="cloudMgmAddress"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"cloudMgmAddress"
		public Keyword getNameCloudMgmAddressKeyword_1_0() { return cNameCloudMgmAddressKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class CloudCredentialTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CloudCredentialType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameCloudCredentialKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//CloudCredentialType:
		//	many="many"? name="cloudCredential" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="cloudCredential" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="cloudCredential"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"cloudCredential"
		public Keyword getNameCloudCredentialKeyword_1_0() { return cNameCloudCredentialKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class CloudUserTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CloudUserType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameCloudUserKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//CloudUserType:
		//	many="many"? name="cloudUser" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="cloudUser" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="cloudUser"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"cloudUser"
		public Keyword getNameCloudUserKeyword_1_0() { return cNameCloudUserKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class CloudPasswordTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CloudPasswordType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameCloudPasswordKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//CloudPasswordType:
		//	many="many"? name="cloudPassword" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="cloudPassword" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="cloudPassword"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"cloudPassword"
		public Keyword getNameCloudPasswordKeyword_1_0() { return cNameCloudPasswordKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class DeployElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Deploy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeployKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDeployOneAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDeployOneDeployAppFeatureParserRuleCall_3_0 = (RuleCall)cDeployOneAssignment_3.eContents().get(0);
		private final Assignment cDeployTwoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDeployTwoDeployTypeFeatureParserRuleCall_4_0 = (RuleCall)cDeployTwoAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		///////
		//// Deploy definitions
		///////
		//Deploy:
		//	"deploy" name=ID "{" deployOne+=DeployAppFeature deployTwo+=DeployTypeFeature? "}";
		public ParserRule getRule() { return rule; }

		//"deploy" name=ID "{" deployOne+=DeployAppFeature deployTwo+=DeployTypeFeature? "}"
		public Group getGroup() { return cGroup; }

		//"deploy"
		public Keyword getDeployKeyword_0() { return cDeployKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//deployOne+=DeployAppFeature
		public Assignment getDeployOneAssignment_3() { return cDeployOneAssignment_3; }

		//DeployAppFeature
		public RuleCall getDeployOneDeployAppFeatureParserRuleCall_3_0() { return cDeployOneDeployAppFeatureParserRuleCall_3_0; }

		//deployTwo+=DeployTypeFeature?
		public Assignment getDeployTwoAssignment_4() { return cDeployTwoAssignment_4; }

		//DeployTypeFeature
		public RuleCall getDeployTwoDeployTypeFeatureParserRuleCall_4_0() { return cDeployTwoDeployTypeFeatureParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class DeployAppFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DeployAppFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameDeployAppKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeDeployAppCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeDeployAppIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeDeployAppCrossReference_3_0.eContents().get(1);
		
		//DeployAppFeature:
		//	many="many"? name="deployApp" ":" type=[DeployApp];
		public ParserRule getRule() { return rule; }

		//many="many"? name="deployApp" ":" type=[DeployApp]
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="deployApp"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"deployApp"
		public Keyword getNameDeployAppKeyword_1_0() { return cNameDeployAppKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=[DeployApp]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[DeployApp]
		public CrossReference getTypeDeployAppCrossReference_3_0() { return cTypeDeployAppCrossReference_3_0; }

		//ID
		public RuleCall getTypeDeployAppIDTerminalRuleCall_3_0_1() { return cTypeDeployAppIDTerminalRuleCall_3_0_1; }
	}

	public class DeployTypeFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DeployTypeFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameDeployTypeKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeDeployTypeCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeDeployTypeIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeDeployTypeCrossReference_3_0.eContents().get(1);
		
		//DeployTypeFeature:
		//	many="many"? name="deployType" ":" type=[DeployType];
		public ParserRule getRule() { return rule; }

		//many="many"? name="deployType" ":" type=[DeployType]
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="deployType"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"deployType"
		public Keyword getNameDeployTypeKeyword_1_0() { return cNameDeployTypeKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=[DeployType]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[DeployType]
		public CrossReference getTypeDeployTypeCrossReference_3_0() { return cTypeDeployTypeCrossReference_3_0; }

		//ID
		public RuleCall getTypeDeployTypeIDTerminalRuleCall_3_0_1() { return cTypeDeployTypeIDTerminalRuleCall_3_0_1; }
	}

	public class DeployTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DeployType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeployTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRangeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRangeDeployRangeTypeParserRuleCall_3_0 = (RuleCall)cRangeAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//DeployType:
		//	"deployType" name=ID "{" // Create a conditional type to prevent possible programming errors
		//	range+=DeployRangeType "}";
		public ParserRule getRule() { return rule; }

		//"deployType" name=ID "{" // Create a conditional type to prevent possible programming errors
		//range+=DeployRangeType "}"
		public Group getGroup() { return cGroup; }

		//"deployType"
		public Keyword getDeployTypeKeyword_0() { return cDeployTypeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//range+=DeployRangeType
		public Assignment getRangeAssignment_3() { return cRangeAssignment_3; }

		//DeployRangeType
		public RuleCall getRangeDeployRangeTypeParserRuleCall_3_0() { return cRangeDeployRangeTypeParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class DeployRangeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DeployRangeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameRangeKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//DeployRangeType:
		//	many="many"? name="range" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="range" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="range"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"range"
		public Keyword getNameRangeKeyword_1_0() { return cNameRangeKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class DeployAppElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DeployApp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeployAppKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cClassAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cClassDeployAppClassTypeParserRuleCall_3_0 = (RuleCall)cClassAssignment_3.eContents().get(0);
		private final Assignment cDeployMasterMethodAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDeployMasterMethodDeployAppMasterMethodTypeParserRuleCall_4_0 = (RuleCall)cDeployMasterMethodAssignment_4.eContents().get(0);
		private final Assignment cDeploySlaveMethodAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDeploySlaveMethodDeployAppSlaveMethodTypeParserRuleCall_5_0 = (RuleCall)cDeploySlaveMethodAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DeployApp:
		//	"deployApp" name=ID "{" class+=DeployAppClassType deployMasterMethod+=DeployAppMasterMethodType*
		//	deploySlaveMethod+=DeployAppSlaveMethodType* "}";
		public ParserRule getRule() { return rule; }

		//"deployApp" name=ID "{" class+=DeployAppClassType deployMasterMethod+=DeployAppMasterMethodType*
		//deploySlaveMethod+=DeployAppSlaveMethodType* "}"
		public Group getGroup() { return cGroup; }

		//"deployApp"
		public Keyword getDeployAppKeyword_0() { return cDeployAppKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//class+=DeployAppClassType
		public Assignment getClassAssignment_3() { return cClassAssignment_3; }

		//DeployAppClassType
		public RuleCall getClassDeployAppClassTypeParserRuleCall_3_0() { return cClassDeployAppClassTypeParserRuleCall_3_0; }

		//deployMasterMethod+=DeployAppMasterMethodType*
		public Assignment getDeployMasterMethodAssignment_4() { return cDeployMasterMethodAssignment_4; }

		//DeployAppMasterMethodType
		public RuleCall getDeployMasterMethodDeployAppMasterMethodTypeParserRuleCall_4_0() { return cDeployMasterMethodDeployAppMasterMethodTypeParserRuleCall_4_0; }

		//deploySlaveMethod+=DeployAppSlaveMethodType*
		public Assignment getDeploySlaveMethodAssignment_5() { return cDeploySlaveMethodAssignment_5; }

		//DeployAppSlaveMethodType
		public RuleCall getDeploySlaveMethodDeployAppSlaveMethodTypeParserRuleCall_5_0() { return cDeploySlaveMethodDeployAppSlaveMethodTypeParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class DeployAppClassTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DeployAppClassType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameClassKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//DeployAppClassType:
		//	many="many"? name="class" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="class" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="class"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"class"
		public Keyword getNameClassKeyword_1_0() { return cNameClassKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class DeployAppMasterMethodTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DeployAppMasterMethodType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameDeployMasterMethodKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//DeployAppMasterMethodType:
		//	many="many"? name="deployMasterMethod" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="deployMasterMethod" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="deployMasterMethod"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"deployMasterMethod"
		public Keyword getNameDeployMasterMethodKeyword_1_0() { return cNameDeployMasterMethodKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class DeployAppSlaveMethodTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DeployAppSlaveMethodType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameDeploySlaveMethodKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//DeployAppSlaveMethodType:
		//	many="many"? name="deploySlaveMethod" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="deploySlaveMethod" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="deploySlaveMethod"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"deploySlaveMethod"
		public Keyword getNameDeploySlaveMethodKeyword_1_0() { return cNameDeploySlaveMethodKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class MonitorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Monitor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMonitorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRangeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRangeMonitorRangeTypeParserRuleCall_3_0 = (RuleCall)cRangeAssignment_3.eContents().get(0);
		private final Assignment cMonitoringTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMonitoringTypeMonitoringTypeParserRuleCall_4_0 = (RuleCall)cMonitoringTypeAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		///////
		//// Monitor definitions
		///////
		//Monitor:
		//	"monitor" name=ID "{" range+=MonitorRangeType monitoringType+=MonitoringType? "}";
		public ParserRule getRule() { return rule; }

		//"monitor" name=ID "{" range+=MonitorRangeType monitoringType+=MonitoringType? "}"
		public Group getGroup() { return cGroup; }

		//"monitor"
		public Keyword getMonitorKeyword_0() { return cMonitorKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//range+=MonitorRangeType
		public Assignment getRangeAssignment_3() { return cRangeAssignment_3; }

		//MonitorRangeType
		public RuleCall getRangeMonitorRangeTypeParserRuleCall_3_0() { return cRangeMonitorRangeTypeParserRuleCall_3_0; }

		//monitoringType+=MonitoringType?
		public Assignment getMonitoringTypeAssignment_4() { return cMonitoringTypeAssignment_4; }

		//MonitoringType
		public RuleCall getMonitoringTypeMonitoringTypeParserRuleCall_4_0() { return cMonitoringTypeMonitoringTypeParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class MonitorRangeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MonitorRangeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameRangeKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//MonitorRangeType:
		//	many="many"? name="range" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="range" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="range"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"range"
		public Keyword getNameRangeKeyword_1_0() { return cNameRangeKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class MonitoringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MonitoringType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameMonitoringTypeKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cTypeAlternatives_3_0 = (Alternatives)cTypeAssignment_3.eContents().get(0);
		private final Keyword cTypeReactiveKeyword_3_0_0 = (Keyword)cTypeAlternatives_3_0.eContents().get(0);
		private final Keyword cTypePredictiveKeyword_3_0_1 = (Keyword)cTypeAlternatives_3_0.eContents().get(1);
		
		//MonitoringType:
		//	many="many"? name="monitoringType" ":" type=("reactive" | "predictive");
		public ParserRule getRule() { return rule; }

		//many="many"? name="monitoringType" ":" type=("reactive" | "predictive")
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="monitoringType"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"monitoringType"
		public Keyword getNameMonitoringTypeKeyword_1_0() { return cNameMonitoringTypeKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=("reactive" | "predictive")
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//"reactive" | "predictive"
		public Alternatives getTypeAlternatives_3_0() { return cTypeAlternatives_3_0; }

		//"reactive"
		public Keyword getTypeReactiveKeyword_3_0_0() { return cTypeReactiveKeyword_3_0_0; }

		//"predictive"
		public Keyword getTypePredictiveKeyword_3_0_1() { return cTypePredictiveKeyword_3_0_1; }
	}

	public class StressElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Stress");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStressKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRangeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRangeStressRangeTypeParserRuleCall_3_0 = (RuleCall)cRangeAssignment_3.eContents().get(0);
		private final Assignment cStressClassAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cStressClassStressClassTypeParserRuleCall_4_0 = (RuleCall)cStressClassAssignment_4.eContents().get(0);
		private final Assignment cStressMethodAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cStressMethodStressMethodTypeParserRuleCall_5_0 = (RuleCall)cStressMethodAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		///////
		//// Stress definitions
		///////
		//Stress:
		//	"stress" name=ID "{" range+=StressRangeType stressClass+=StressClassType* stressMethod+=StressMethodType* "}";
		public ParserRule getRule() { return rule; }

		//"stress" name=ID "{" range+=StressRangeType stressClass+=StressClassType* stressMethod+=StressMethodType* "}"
		public Group getGroup() { return cGroup; }

		//"stress"
		public Keyword getStressKeyword_0() { return cStressKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//range+=StressRangeType
		public Assignment getRangeAssignment_3() { return cRangeAssignment_3; }

		//StressRangeType
		public RuleCall getRangeStressRangeTypeParserRuleCall_3_0() { return cRangeStressRangeTypeParserRuleCall_3_0; }

		//stressClass+=StressClassType*
		public Assignment getStressClassAssignment_4() { return cStressClassAssignment_4; }

		//StressClassType
		public RuleCall getStressClassStressClassTypeParserRuleCall_4_0() { return cStressClassStressClassTypeParserRuleCall_4_0; }

		//stressMethod+=StressMethodType*
		public Assignment getStressMethodAssignment_5() { return cStressMethodAssignment_5; }

		//StressMethodType
		public RuleCall getStressMethodStressMethodTypeParserRuleCall_5_0() { return cStressMethodStressMethodTypeParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class StressRangeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StressRangeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameRangeKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//StressRangeType:
		//	many="many"? name="range" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="range" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="range"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"range"
		public Keyword getNameRangeKeyword_1_0() { return cNameRangeKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class StressClassTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StressClassType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameStressClassKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//StressClassType:
		//	many="many"? name="stressClass" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="stressClass" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="stressClass"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"stressClass"
		public Keyword getNameStressClassKeyword_1_0() { return cNameStressClassKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class StressMethodTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StressMethodType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameStressMethodKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//StressMethodType:
		//	many="many"? name="stressMethod" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="stressMethod" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="stressMethod"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"stressMethod"
		public Keyword getNameStressMethodKeyword_1_0() { return cNameStressMethodKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRangeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRangeActionRangeTypeParserRuleCall_3_0 = (RuleCall)cRangeAssignment_3.eContents().get(0);
		private final Assignment cClassAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cClassActionClassTypeParserRuleCall_4_0 = (RuleCall)cClassAssignment_4.eContents().get(0);
		private final Assignment cMethodAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMethodActionMethodTypeParserRuleCall_5_0 = (RuleCall)cMethodAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		///////
		//// Action definitions
		///////
		//Action:
		//	"action" name=ID "{" range+=ActionRangeType class+=ActionClassType method+=ActionMethodType "}";
		public ParserRule getRule() { return rule; }

		//"action" name=ID "{" range+=ActionRangeType class+=ActionClassType method+=ActionMethodType "}"
		public Group getGroup() { return cGroup; }

		//"action"
		public Keyword getActionKeyword_0() { return cActionKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//range+=ActionRangeType
		public Assignment getRangeAssignment_3() { return cRangeAssignment_3; }

		//ActionRangeType
		public RuleCall getRangeActionRangeTypeParserRuleCall_3_0() { return cRangeActionRangeTypeParserRuleCall_3_0; }

		//class+=ActionClassType
		public Assignment getClassAssignment_4() { return cClassAssignment_4; }

		//ActionClassType
		public RuleCall getClassActionClassTypeParserRuleCall_4_0() { return cClassActionClassTypeParserRuleCall_4_0; }

		//method+=ActionMethodType
		public Assignment getMethodAssignment_5() { return cMethodAssignment_5; }

		//ActionMethodType
		public RuleCall getMethodActionMethodTypeParserRuleCall_5_0() { return cMethodActionMethodTypeParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class ActionRangeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActionRangeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameRangeKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//ActionRangeType:
		//	many="many"? name="range" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="range" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="range"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"range"
		public Keyword getNameRangeKeyword_1_0() { return cNameRangeKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class ActionClassTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActionClassType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameClassKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//ActionClassType:
		//	many="many"? name="class" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="class" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="class"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"class"
		public Keyword getNameClassKeyword_1_0() { return cNameClassKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class ActionMethodTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActionMethodType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameMethodKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//ActionMethodType:
		//	many="many"? name="method" ":" type=STRING;
		public ParserRule getRule() { return rule; }

		//many="many"? name="method" ":" type=STRING
		public Group getGroup() { return cGroup; }

		//many="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name="method"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"method"
		public Keyword getNameMethodKeyword_1_0() { return cNameMethodKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class FeaturesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Features");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///////
		//// Other feature types
		///////
		//Features:
		//	name=ID STRING;
		public ParserRule getRule() { return rule; }

		//name=ID STRING
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1() { return cSTRINGTerminalRuleCall_1; }
	}

	public class IntFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//IntFeature:
		//	name=ID INT;
		public ParserRule getRule() { return rule; }

		//name=ID INT
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	
	
	private DomainModelElements pDomainModel;
	private TypeElements pType;
	private CreateElements pCreate;
	private InitMachinesFeatureElements pInitMachinesFeature;
	private InitIncrementFeatureElements pInitIncrementFeature;
	private VirtualMachineFeatureElements pVirtualMachineFeature;
	private VirtualMachineElements pVirtualMachine;
	private VirtualMachineTypeFeatureElements pVirtualMachineTypeFeature;
	private CloudProviderTypeElements pCloudProviderType;
	private CloudProviderElements pCloudProvider;
	private CloudOptionalTypesElements pCloudOptionalTypes;
	private CloudTypeElements pCloudType;
	private ScriptTypeElements pScriptType;
	private GeoZoneTypeElements pGeoZoneType;
	private MgmAddressTypeElements pMgmAddressType;
	private CloudCredentialTypeElements pCloudCredentialType;
	private CloudUserTypeElements pCloudUserType;
	private CloudPasswordTypeElements pCloudPasswordType;
	private DeployElements pDeploy;
	private DeployAppFeatureElements pDeployAppFeature;
	private DeployTypeFeatureElements pDeployTypeFeature;
	private DeployTypeElements pDeployType;
	private DeployRangeTypeElements pDeployRangeType;
	private DeployAppElements pDeployApp;
	private DeployAppClassTypeElements pDeployAppClassType;
	private DeployAppMasterMethodTypeElements pDeployAppMasterMethodType;
	private DeployAppSlaveMethodTypeElements pDeployAppSlaveMethodType;
	private MonitorElements pMonitor;
	private MonitorRangeTypeElements pMonitorRangeType;
	private MonitoringTypeElements pMonitoringType;
	private StressElements pStress;
	private StressRangeTypeElements pStressRangeType;
	private StressClassTypeElements pStressClassType;
	private StressMethodTypeElements pStressMethodType;
	private ActionElements pAction;
	private ActionRangeTypeElements pActionRangeType;
	private ActionClassTypeElements pActionClassType;
	private ActionMethodTypeElements pActionMethodType;
	private FeaturesElements pFeatures;
	private IntFeatureElements pIntFeature;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//DomainModel:
	//	elements+=Type*;
	public DomainModelElements getDomainModelAccess() {
		return (pDomainModel != null) ? pDomainModel : (pDomainModel = new DomainModelElements());
	}
	
	public ParserRule getDomainModelRule() {
		return getDomainModelAccess().getRule();
	}

	//Type:
	//	Create | VirtualMachine | CloudProvider | Deploy | DeployType | DeployApp | Monitor | Stress | Action;
	public TypeElements getTypeAccess() {
		return (pType != null) ? pType : (pType = new TypeElements());
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}

	///////
	//// Create definitions
	//////
	//Create:
	//	"create" name=ID "{" vMachine+=VirtualMachineFeature initMachines+=InitMachinesFeature
	//	initIncrement+=InitIncrementFeature "}";
	public CreateElements getCreateAccess() {
		return (pCreate != null) ? pCreate : (pCreate = new CreateElements());
	}
	
	public ParserRule getCreateRule() {
		return getCreateAccess().getRule();
	}

	//InitMachinesFeature:
	//	many="many"? name="initialMachines" ":" type=INT;
	public InitMachinesFeatureElements getInitMachinesFeatureAccess() {
		return (pInitMachinesFeature != null) ? pInitMachinesFeature : (pInitMachinesFeature = new InitMachinesFeatureElements());
	}
	
	public ParserRule getInitMachinesFeatureRule() {
		return getInitMachinesFeatureAccess().getRule();
	}

	//InitIncrementFeature:
	//	many="many"? name="initialIncrement" ":" type=INT;
	public InitIncrementFeatureElements getInitIncrementFeatureAccess() {
		return (pInitIncrementFeature != null) ? pInitIncrementFeature : (pInitIncrementFeature = new InitIncrementFeatureElements());
	}
	
	public ParserRule getInitIncrementFeatureRule() {
		return getInitIncrementFeatureAccess().getRule();
	}

	//VirtualMachineFeature:
	//	many="many"? name="vMachine" ":" type=[VirtualMachine];
	public VirtualMachineFeatureElements getVirtualMachineFeatureAccess() {
		return (pVirtualMachineFeature != null) ? pVirtualMachineFeature : (pVirtualMachineFeature = new VirtualMachineFeatureElements());
	}
	
	public ParserRule getVirtualMachineFeatureRule() {
		return getVirtualMachineFeatureAccess().getRule();
	}

	//VirtualMachine:
	//	"virtualMachine" name=ID "{" vM+=VirtualMachineTypeFeature cloudProvider+=CloudProviderType "}";
	public VirtualMachineElements getVirtualMachineAccess() {
		return (pVirtualMachine != null) ? pVirtualMachine : (pVirtualMachine = new VirtualMachineElements());
	}
	
	public ParserRule getVirtualMachineRule() {
		return getVirtualMachineAccess().getRule();
	}

	//VirtualMachineTypeFeature:
	//	many="many"? name="vM" ":" type=("Linux1-CloudTest" | "Small");
	public VirtualMachineTypeFeatureElements getVirtualMachineTypeFeatureAccess() {
		return (pVirtualMachineTypeFeature != null) ? pVirtualMachineTypeFeature : (pVirtualMachineTypeFeature = new VirtualMachineTypeFeatureElements());
	}
	
	public ParserRule getVirtualMachineTypeFeatureRule() {
		return getVirtualMachineTypeFeatureAccess().getRule();
	}

	//CloudProviderType:
	//	many="many"? name="cloudProvider" ":" type=[CloudProvider];
	public CloudProviderTypeElements getCloudProviderTypeAccess() {
		return (pCloudProviderType != null) ? pCloudProviderType : (pCloudProviderType = new CloudProviderTypeElements());
	}
	
	public ParserRule getCloudProviderTypeRule() {
		return getCloudProviderTypeAccess().getRule();
	}

	//CloudProvider:
	//	"cloudProvider" name=ID "{" cloudType+=CloudType cloudAddress+=MgmAddressType cloudCredential+=CloudCredentialType
	//	cloudOptionalTypes+=CloudOptionalTypes* "}";
	public CloudProviderElements getCloudProviderAccess() {
		return (pCloudProvider != null) ? pCloudProvider : (pCloudProvider = new CloudProviderElements());
	}
	
	public ParserRule getCloudProviderRule() {
		return getCloudProviderAccess().getRule();
	}

	//CloudOptionalTypes:
	//	ScriptType | GeoZoneType | CloudUserType | CloudPasswordType;
	public CloudOptionalTypesElements getCloudOptionalTypesAccess() {
		return (pCloudOptionalTypes != null) ? pCloudOptionalTypes : (pCloudOptionalTypes = new CloudOptionalTypesElements());
	}
	
	public ParserRule getCloudOptionalTypesRule() {
		return getCloudOptionalTypesAccess().getRule();
	}

	//CloudType:
	//	many="many"? name="cloudType" ":" type=("G5000" | "AmazonEC2" | "Google" | "VirtualBox");
	public CloudTypeElements getCloudTypeAccess() {
		return (pCloudType != null) ? pCloudType : (pCloudType = new CloudTypeElements());
	}
	
	public ParserRule getCloudTypeRule() {
		return getCloudTypeAccess().getRule();
	}

	//ScriptType:
	//	many="many"? name="newMachinesScript" ":" type=STRING;
	public ScriptTypeElements getScriptTypeAccess() {
		return (pScriptType != null) ? pScriptType : (pScriptType = new ScriptTypeElements());
	}
	
	public ParserRule getScriptTypeRule() {
		return getScriptTypeAccess().getRule();
	}

	//GeoZoneType:
	//	many="many"? name="geoZone" ":" type=STRING;
	public GeoZoneTypeElements getGeoZoneTypeAccess() {
		return (pGeoZoneType != null) ? pGeoZoneType : (pGeoZoneType = new GeoZoneTypeElements());
	}
	
	public ParserRule getGeoZoneTypeRule() {
		return getGeoZoneTypeAccess().getRule();
	}

	//MgmAddressType:
	//	many="many"? name="cloudMgmAddress" ":" type=STRING;
	public MgmAddressTypeElements getMgmAddressTypeAccess() {
		return (pMgmAddressType != null) ? pMgmAddressType : (pMgmAddressType = new MgmAddressTypeElements());
	}
	
	public ParserRule getMgmAddressTypeRule() {
		return getMgmAddressTypeAccess().getRule();
	}

	//CloudCredentialType:
	//	many="many"? name="cloudCredential" ":" type=STRING;
	public CloudCredentialTypeElements getCloudCredentialTypeAccess() {
		return (pCloudCredentialType != null) ? pCloudCredentialType : (pCloudCredentialType = new CloudCredentialTypeElements());
	}
	
	public ParserRule getCloudCredentialTypeRule() {
		return getCloudCredentialTypeAccess().getRule();
	}

	//CloudUserType:
	//	many="many"? name="cloudUser" ":" type=STRING;
	public CloudUserTypeElements getCloudUserTypeAccess() {
		return (pCloudUserType != null) ? pCloudUserType : (pCloudUserType = new CloudUserTypeElements());
	}
	
	public ParserRule getCloudUserTypeRule() {
		return getCloudUserTypeAccess().getRule();
	}

	//CloudPasswordType:
	//	many="many"? name="cloudPassword" ":" type=STRING;
	public CloudPasswordTypeElements getCloudPasswordTypeAccess() {
		return (pCloudPasswordType != null) ? pCloudPasswordType : (pCloudPasswordType = new CloudPasswordTypeElements());
	}
	
	public ParserRule getCloudPasswordTypeRule() {
		return getCloudPasswordTypeAccess().getRule();
	}

	///////
	//// Deploy definitions
	///////
	//Deploy:
	//	"deploy" name=ID "{" deployOne+=DeployAppFeature deployTwo+=DeployTypeFeature? "}";
	public DeployElements getDeployAccess() {
		return (pDeploy != null) ? pDeploy : (pDeploy = new DeployElements());
	}
	
	public ParserRule getDeployRule() {
		return getDeployAccess().getRule();
	}

	//DeployAppFeature:
	//	many="many"? name="deployApp" ":" type=[DeployApp];
	public DeployAppFeatureElements getDeployAppFeatureAccess() {
		return (pDeployAppFeature != null) ? pDeployAppFeature : (pDeployAppFeature = new DeployAppFeatureElements());
	}
	
	public ParserRule getDeployAppFeatureRule() {
		return getDeployAppFeatureAccess().getRule();
	}

	//DeployTypeFeature:
	//	many="many"? name="deployType" ":" type=[DeployType];
	public DeployTypeFeatureElements getDeployTypeFeatureAccess() {
		return (pDeployTypeFeature != null) ? pDeployTypeFeature : (pDeployTypeFeature = new DeployTypeFeatureElements());
	}
	
	public ParserRule getDeployTypeFeatureRule() {
		return getDeployTypeFeatureAccess().getRule();
	}

	//DeployType:
	//	"deployType" name=ID "{" // Create a conditional type to prevent possible programming errors
	//	range+=DeployRangeType "}";
	public DeployTypeElements getDeployTypeAccess() {
		return (pDeployType != null) ? pDeployType : (pDeployType = new DeployTypeElements());
	}
	
	public ParserRule getDeployTypeRule() {
		return getDeployTypeAccess().getRule();
	}

	//DeployRangeType:
	//	many="many"? name="range" ":" type=STRING;
	public DeployRangeTypeElements getDeployRangeTypeAccess() {
		return (pDeployRangeType != null) ? pDeployRangeType : (pDeployRangeType = new DeployRangeTypeElements());
	}
	
	public ParserRule getDeployRangeTypeRule() {
		return getDeployRangeTypeAccess().getRule();
	}

	//DeployApp:
	//	"deployApp" name=ID "{" class+=DeployAppClassType deployMasterMethod+=DeployAppMasterMethodType*
	//	deploySlaveMethod+=DeployAppSlaveMethodType* "}";
	public DeployAppElements getDeployAppAccess() {
		return (pDeployApp != null) ? pDeployApp : (pDeployApp = new DeployAppElements());
	}
	
	public ParserRule getDeployAppRule() {
		return getDeployAppAccess().getRule();
	}

	//DeployAppClassType:
	//	many="many"? name="class" ":" type=STRING;
	public DeployAppClassTypeElements getDeployAppClassTypeAccess() {
		return (pDeployAppClassType != null) ? pDeployAppClassType : (pDeployAppClassType = new DeployAppClassTypeElements());
	}
	
	public ParserRule getDeployAppClassTypeRule() {
		return getDeployAppClassTypeAccess().getRule();
	}

	//DeployAppMasterMethodType:
	//	many="many"? name="deployMasterMethod" ":" type=STRING;
	public DeployAppMasterMethodTypeElements getDeployAppMasterMethodTypeAccess() {
		return (pDeployAppMasterMethodType != null) ? pDeployAppMasterMethodType : (pDeployAppMasterMethodType = new DeployAppMasterMethodTypeElements());
	}
	
	public ParserRule getDeployAppMasterMethodTypeRule() {
		return getDeployAppMasterMethodTypeAccess().getRule();
	}

	//DeployAppSlaveMethodType:
	//	many="many"? name="deploySlaveMethod" ":" type=STRING;
	public DeployAppSlaveMethodTypeElements getDeployAppSlaveMethodTypeAccess() {
		return (pDeployAppSlaveMethodType != null) ? pDeployAppSlaveMethodType : (pDeployAppSlaveMethodType = new DeployAppSlaveMethodTypeElements());
	}
	
	public ParserRule getDeployAppSlaveMethodTypeRule() {
		return getDeployAppSlaveMethodTypeAccess().getRule();
	}

	///////
	//// Monitor definitions
	///////
	//Monitor:
	//	"monitor" name=ID "{" range+=MonitorRangeType monitoringType+=MonitoringType? "}";
	public MonitorElements getMonitorAccess() {
		return (pMonitor != null) ? pMonitor : (pMonitor = new MonitorElements());
	}
	
	public ParserRule getMonitorRule() {
		return getMonitorAccess().getRule();
	}

	//MonitorRangeType:
	//	many="many"? name="range" ":" type=STRING;
	public MonitorRangeTypeElements getMonitorRangeTypeAccess() {
		return (pMonitorRangeType != null) ? pMonitorRangeType : (pMonitorRangeType = new MonitorRangeTypeElements());
	}
	
	public ParserRule getMonitorRangeTypeRule() {
		return getMonitorRangeTypeAccess().getRule();
	}

	//MonitoringType:
	//	many="many"? name="monitoringType" ":" type=("reactive" | "predictive");
	public MonitoringTypeElements getMonitoringTypeAccess() {
		return (pMonitoringType != null) ? pMonitoringType : (pMonitoringType = new MonitoringTypeElements());
	}
	
	public ParserRule getMonitoringTypeRule() {
		return getMonitoringTypeAccess().getRule();
	}

	///////
	//// Stress definitions
	///////
	//Stress:
	//	"stress" name=ID "{" range+=StressRangeType stressClass+=StressClassType* stressMethod+=StressMethodType* "}";
	public StressElements getStressAccess() {
		return (pStress != null) ? pStress : (pStress = new StressElements());
	}
	
	public ParserRule getStressRule() {
		return getStressAccess().getRule();
	}

	//StressRangeType:
	//	many="many"? name="range" ":" type=STRING;
	public StressRangeTypeElements getStressRangeTypeAccess() {
		return (pStressRangeType != null) ? pStressRangeType : (pStressRangeType = new StressRangeTypeElements());
	}
	
	public ParserRule getStressRangeTypeRule() {
		return getStressRangeTypeAccess().getRule();
	}

	//StressClassType:
	//	many="many"? name="stressClass" ":" type=STRING;
	public StressClassTypeElements getStressClassTypeAccess() {
		return (pStressClassType != null) ? pStressClassType : (pStressClassType = new StressClassTypeElements());
	}
	
	public ParserRule getStressClassTypeRule() {
		return getStressClassTypeAccess().getRule();
	}

	//StressMethodType:
	//	many="many"? name="stressMethod" ":" type=STRING;
	public StressMethodTypeElements getStressMethodTypeAccess() {
		return (pStressMethodType != null) ? pStressMethodType : (pStressMethodType = new StressMethodTypeElements());
	}
	
	public ParserRule getStressMethodTypeRule() {
		return getStressMethodTypeAccess().getRule();
	}

	///////
	//// Action definitions
	///////
	//Action:
	//	"action" name=ID "{" range+=ActionRangeType class+=ActionClassType method+=ActionMethodType "}";
	public ActionElements getActionAccess() {
		return (pAction != null) ? pAction : (pAction = new ActionElements());
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}

	//ActionRangeType:
	//	many="many"? name="range" ":" type=STRING;
	public ActionRangeTypeElements getActionRangeTypeAccess() {
		return (pActionRangeType != null) ? pActionRangeType : (pActionRangeType = new ActionRangeTypeElements());
	}
	
	public ParserRule getActionRangeTypeRule() {
		return getActionRangeTypeAccess().getRule();
	}

	//ActionClassType:
	//	many="many"? name="class" ":" type=STRING;
	public ActionClassTypeElements getActionClassTypeAccess() {
		return (pActionClassType != null) ? pActionClassType : (pActionClassType = new ActionClassTypeElements());
	}
	
	public ParserRule getActionClassTypeRule() {
		return getActionClassTypeAccess().getRule();
	}

	//ActionMethodType:
	//	many="many"? name="method" ":" type=STRING;
	public ActionMethodTypeElements getActionMethodTypeAccess() {
		return (pActionMethodType != null) ? pActionMethodType : (pActionMethodType = new ActionMethodTypeElements());
	}
	
	public ParserRule getActionMethodTypeRule() {
		return getActionMethodTypeAccess().getRule();
	}

	///////
	//// Other feature types
	///////
	//Features:
	//	name=ID STRING;
	public FeaturesElements getFeaturesAccess() {
		return (pFeatures != null) ? pFeatures : (pFeatures = new FeaturesElements());
	}
	
	public ParserRule getFeaturesRule() {
		return getFeaturesAccess().getRule();
	}

	//IntFeature:
	//	name=ID INT;
	public IntFeatureElements getIntFeatureAccess() {
		return (pIntFeature != null) ? pIntFeature : (pIntFeature = new IntFeatureElements());
	}
	
	public ParserRule getIntFeatureRule() {
		return getIntFeatureAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
