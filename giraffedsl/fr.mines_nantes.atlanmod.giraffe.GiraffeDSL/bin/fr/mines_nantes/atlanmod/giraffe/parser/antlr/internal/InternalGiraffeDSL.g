/*
* generated by Xtext
*/
grammar InternalGiraffeDSL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package fr.mines_nantes.atlanmod.giraffe.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.mines_nantes.atlanmod.giraffe.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.mines_nantes.atlanmod.giraffe.services.GiraffeDSLGrammarAccess;

}

@parser::members {

 	private GiraffeDSLGrammarAccess grammarAccess;
 	
    public InternalGiraffeDSLParser(TokenStream input, GiraffeDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "GiraffeMetaModel";	
   	}
   	
   	@Override
   	protected GiraffeDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleGiraffeMetaModel
entryRuleGiraffeMetaModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGiraffeMetaModelRule()); }
	 iv_ruleGiraffeMetaModel=ruleGiraffeMetaModel 
	 { $current=$iv_ruleGiraffeMetaModel.current; } 
	 EOF 
;

// Rule GiraffeMetaModel
ruleGiraffeMetaModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getGiraffeMetaModelAccess().getImportsImportParserRuleCall_0_0()); 
	    }
		lv_imports_0_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGiraffeMetaModelRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_0_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getGiraffeMetaModelAccess().getEnvironmentEnvironmentParserRuleCall_1_0()); 
	    }
		lv_environment_1_0=ruleEnvironment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGiraffeMetaModelRule());
	        }
       		set(
       			$current, 
       			"environment",
        		lv_environment_1_0, 
        		"Environment");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGiraffeMetaModelAccess().getDeploymentdefinitionsDeploymentDefinitionsParserRuleCall_2_0()); 
	    }
		lv_deploymentdefinitions_2_0=ruleDeploymentDefinitions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGiraffeMetaModelRule());
	        }
       		set(
       			$current, 
       			"deploymentdefinitions",
        		lv_deploymentdefinitions_2_0, 
        		"DeploymentDefinitions");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGiraffeMetaModelAccess().getDeploymentDeploymentParserRuleCall_3_0()); 
	    }
		lv_deployment_3_0=ruleDeployment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGiraffeMetaModelRule());
	        }
       		set(
       			$current, 
       			"deployment",
        		lv_deployment_3_0, 
        		"Deployment");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEnvironment
entryRuleEnvironment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnvironmentRule()); }
	 iv_ruleEnvironment=ruleEnvironment 
	 { $current=$iv_ruleEnvironment.current; } 
	 EOF 
;

// Rule Environment
ruleEnvironment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEnvironmentAccess().getEnvironmentAction_0(),
            $current);
    }
)	otherlv_1='environment' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnvironmentAccess().getEnvironmentKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnvironmentAccess().getAuthsAuthParserRuleCall_3_0()); 
	    }
		lv_auths_3_0=ruleAuth		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnvironmentRule());
	        }
       		add(
       			$current, 
       			"auths",
        		lv_auths_3_0, 
        		"Auth");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getEnvironmentAccess().getResourcesResourceParserRuleCall_4_0()); 
	    }
		lv_resources_4_0=ruleResource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnvironmentRule());
	        }
       		add(
       			$current, 
       			"resources",
        		lv_resources_4_0, 
        		"Resource");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getEnvironmentAccess().getDependenciesDependencyParserRuleCall_5_0()); 
	    }
		lv_dependencies_5_0=ruleDependency		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnvironmentRule());
	        }
       		add(
       			$current, 
       			"dependencies",
        		lv_dependencies_5_0, 
        		"Dependency");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getEnvironmentAccess().getVirtualmachinesVirtualMachineParserRuleCall_6_0()); 
	    }
		lv_virtualmachines_6_0=ruleVirtualMachine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnvironmentRule());
	        }
       		add(
       			$current, 
       			"virtualmachines",
        		lv_virtualmachines_6_0, 
        		"VirtualMachine");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getEnvironmentAccess().getProvidersProvidersParserRuleCall_7_0()); 
	    }
		lv_providers_7_0=ruleProviders		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnvironmentRule());
	        }
       		add(
       			$current, 
       			"providers",
        		lv_providers_7_0, 
        		"Providers");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleDeploymentDefinitions
entryRuleDeploymentDefinitions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeploymentDefinitionsRule()); }
	 iv_ruleDeploymentDefinitions=ruleDeploymentDefinitions 
	 { $current=$iv_ruleDeploymentDefinitions.current; } 
	 EOF 
;

// Rule DeploymentDefinitions
ruleDeploymentDefinitions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeploymentDefinitionsAccess().getDeploymentDefinitionsAction_0(),
            $current);
    }
)	otherlv_1='deployment-definitions' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeploymentDefinitionsAccess().getDeploymentDefinitionsKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeploymentDefinitionsAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeploymentDefinitionsAccess().getArtifactsArtifactParserRuleCall_3_0_0()); 
	    }
		lv_artifacts_3_1=ruleArtifact		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeploymentDefinitionsRule());
	        }
       		add(
       			$current, 
       			"artifacts",
        		lv_artifacts_3_1, 
        		"Artifact");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getDeploymentDefinitionsAccess().getArtifactsConfArtifactParserRuleCall_3_0_1()); 
	    }
		lv_artifacts_3_2=ruleConfArtifact		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeploymentDefinitionsRule());
	        }
       		add(
       			$current, 
       			"artifacts",
        		lv_artifacts_3_2, 
        		"ConfArtifact");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDeploymentDefinitionsAccess().getNodesetsNodesetParserRuleCall_4_0()); 
	    }
		lv_nodesets_4_0=ruleNodeset		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeploymentDefinitionsRule());
	        }
       		add(
       			$current, 
       			"nodesets",
        		lv_nodesets_4_0, 
        		"Nodeset");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDeploymentDefinitionsAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleDeployment
entryRuleDeployment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeploymentRule()); }
	 iv_ruleDeployment=ruleDeployment 
	 { $current=$iv_ruleDeployment.current; } 
	 EOF 
;

// Rule Deployment
ruleDeployment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='deployment' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeploymentAccess().getDeploymentKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeploymentAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeploymentAccess().getSetupsSetupParserRuleCall_2_0()); 
	    }
		lv_setups_2_0=ruleSetup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeploymentRule());
	        }
       		set(
       			$current, 
       			"setups",
        		lv_setups_2_0, 
        		"Setup");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDeploymentAccess().getDeploysDeployParserRuleCall_3_0()); 
	    }
		lv_deploys_3_0=ruleDeploy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeploymentRule());
	        }
       		set(
       			$current, 
       			"deploys",
        		lv_deploys_3_0, 
        		"Deploy");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDeploymentAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleVirtualMachine
entryRuleVirtualMachine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVirtualMachineRule()); }
	 iv_ruleVirtualMachine=ruleVirtualMachine 
	 { $current=$iv_ruleVirtualMachine.current; } 
	 EOF 
;

// Rule VirtualMachine
ruleVirtualMachine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='virtualmachine' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVirtualMachineAccess().getVirtualmachineKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVirtualMachineAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVirtualMachineRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVirtualMachineAccess().getColonEqualsSignKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getVirtualMachineAccess().getSoNativeSOEnumRuleCall_3_0_0()); 
	    }
		lv_so_3_0=ruleNativeSO		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVirtualMachineRule());
	        }
       		set(
       			$current, 
       			"so",
        		lv_so_3_0, 
        		"NativeSO");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVirtualMachineAccess().getDistributionNativeDistributionEnumRuleCall_3_1_0()); 
	    }
		lv_distribution_4_0=ruleNativeDistribution		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVirtualMachineRule());
	        }
       		set(
       			$current, 
       			"distribution",
        		lv_distribution_4_0, 
        		"NativeDistribution");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVirtualMachineAccess().getVersionEFloatParserRuleCall_3_2_0()); 
	    }
		lv_version_5_0=ruleEFloat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVirtualMachineRule());
	        }
       		set(
       			$current, 
       			"version",
        		lv_version_5_0, 
        		"EFloat");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVirtualMachineAccess().getCommaKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVirtualMachineRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getVirtualMachineAccess().getAuthAuthCrossReference_5_0()); 
	}

)
)?	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVirtualMachineAccess().getCommaKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVirtualMachineRule());
	        }
        }
	otherlv_9=RULE_ID
	{
		newLeafNode(otherlv_9, grammarAccess.getVirtualMachineAccess().getDepDependencyCrossReference_7_0()); 
	}

)
)*)
;







// Entry rule entryRuleProviders
entryRuleProviders returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProvidersRule()); }
	 iv_ruleProviders=ruleProviders 
	 { $current=$iv_ruleProviders.current; } 
	 EOF 
;

// Rule Providers
ruleProviders returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getProvidersAccess().getProviderParserRuleCall_0()); 
    }
    this_Provider_0=ruleProvider
    { 
        $current = $this_Provider_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getProvidersAccess().getOtherProviderParserRuleCall_1()); 
    }
    this_OtherProvider_1=ruleOtherProvider
    { 
        $current = $this_OtherProvider_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleProvider
entryRuleProvider returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProviderRule()); }
	 iv_ruleProvider=ruleProvider 
	 { $current=$iv_ruleProvider.current; } 
	 EOF 
;

// Rule Provider
ruleProvider returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='provider' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProviderAccess().getProviderKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProviderAccess().getTypeNativeProvTypeEnumRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleNativeProvType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProviderRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"NativeProvType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProviderAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProviderRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProviderAccess().getColonEqualsSignKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProviderRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getProviderAccess().getAuthMethodAuthCrossReference_4_0()); 
	}

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getProviderAccess().getCommaKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProviderRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getProviderAccess().getResourcesResourceCrossReference_6_0()); 
	}

)
)	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getProviderAccess().getCommaKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProviderRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getProviderAccess().getVmVirtualMachineCrossReference_8_0()); 
	}

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getProviderAccess().getCommaKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProviderAccess().getHostEStringParserRuleCall_10_0()); 
	    }
		lv_host_10_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProviderRule());
	        }
       		set(
       			$current, 
       			"host",
        		lv_host_10_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOtherProvider
entryRuleOtherProvider returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOtherProviderRule()); }
	 iv_ruleOtherProvider=ruleOtherProvider 
	 { $current=$iv_ruleOtherProvider.current; } 
	 EOF 
;

// Rule OtherProvider
ruleOtherProvider returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='provider' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOtherProviderAccess().getProviderKeyword_0());
    }
(
(
		lv_type_1_0=	'other' 
    {
        newLeafNode(lv_type_1_0, grammarAccess.getOtherProviderAccess().getTypeOtherKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOtherProviderRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_0, "other");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOtherProviderAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherProviderRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOtherProviderAccess().getColonEqualsSignKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOtherProviderRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getOtherProviderAccess().getAuthMethodAuthCrossReference_4_0()); 
	}

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOtherProviderAccess().getCommaKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOtherProviderRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getOtherProviderAccess().getResourcesResourceCrossReference_6_0()); 
	}

)
)	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOtherProviderAccess().getCommaKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOtherProviderRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getOtherProviderAccess().getVmVirtualMachineCrossReference_8_0()); 
	}

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOtherProviderAccess().getCommaKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOtherProviderAccess().getHostEStringParserRuleCall_10_0()); 
	    }
		lv_host_10_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherProviderRule());
	        }
       		set(
       			$current, 
       			"host",
        		lv_host_10_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getOtherProviderAccess().getLeftCurlyBracketKeyword_11());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOtherProviderAccess().getImportsImportParserRuleCall_12_0()); 
	    }
		lv_imports_12_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherProviderRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_12_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='connection' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getOtherProviderAccess().getConnectionKeyword_13());
    }
	otherlv_14='{' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getOtherProviderAccess().getLeftCurlyBracketKeyword_14());
    }
	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getOtherProviderAccess().getRightCurlyBracketKeyword_15());
    }
	otherlv_16='resources' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getOtherProviderAccess().getResourcesKeyword_16());
    }
	otherlv_17='{' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getOtherProviderAccess().getLeftCurlyBracketKeyword_17());
    }
	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getOtherProviderAccess().getRightCurlyBracketKeyword_18());
    }
	otherlv_19='virtualmachine' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getOtherProviderAccess().getVirtualmachineKeyword_19());
    }
	otherlv_20='{' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getOtherProviderAccess().getLeftCurlyBracketKeyword_20());
    }
	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getOtherProviderAccess().getRightCurlyBracketKeyword_21());
    }
	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getOtherProviderAccess().getRightCurlyBracketKeyword_22());
    }
)
;





// Entry rule entryRuleAuth
entryRuleAuth returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAuthRule()); }
	 iv_ruleAuth=ruleAuth 
	 { $current=$iv_ruleAuth.current; } 
	 EOF 
;

// Rule Auth
ruleAuth returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAuthAccess().getPasswordParserRuleCall_0()); 
    }
    this_Password_0=rulePassword
    { 
        $current = $this_Password_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAuthAccess().getKeyParserRuleCall_1()); 
    }
    this_Key_1=ruleKey
    { 
        $current = $this_Key_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAuthAccess().getCredentialParserRuleCall_2()); 
    }
    this_Credential_2=ruleCredential
    { 
        $current = $this_Credential_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePassword
entryRulePassword returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPasswordRule()); }
	 iv_rulePassword=rulePassword 
	 { $current=$iv_rulePassword.current; } 
	 EOF 
;

// Rule Password
rulePassword returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='auth' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPasswordAccess().getAuthKeyword_0());
    }
(
(
		lv_type_1_0=	'password' 
    {
        newLeafNode(lv_type_1_0, grammarAccess.getPasswordAccess().getTypePasswordKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPasswordRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_0, "password");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPasswordAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPasswordRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPasswordAccess().getColonEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPasswordAccess().getUsernameEStringParserRuleCall_4_0()); 
	    }
		lv_username_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPasswordRule());
	        }
       		set(
       			$current, 
       			"username",
        		lv_username_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPasswordAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPasswordAccess().getPasswordEStringParserRuleCall_6_0()); 
	    }
		lv_password_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPasswordRule());
	        }
       		set(
       			$current, 
       			"password",
        		lv_password_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleKey
entryRuleKey returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeyRule()); }
	 iv_ruleKey=ruleKey 
	 { $current=$iv_ruleKey.current; } 
	 EOF 
;

// Rule Key
ruleKey returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='auth' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKeyAccess().getAuthKeyword_0());
    }
(
(
		lv_type_1_0=	'key' 
    {
        newLeafNode(lv_type_1_0, grammarAccess.getKeyAccess().getTypeKeyKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKeyRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_0, "key");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getKeyAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getKeyAccess().getColonEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKeyAccess().getKeyFileEStringParserRuleCall_4_0()); 
	    }
		lv_keyFile_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeyRule());
	        }
       		set(
       			$current, 
       			"keyFile",
        		lv_keyFile_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCredential
entryRuleCredential returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCredentialRule()); }
	 iv_ruleCredential=ruleCredential 
	 { $current=$iv_ruleCredential.current; } 
	 EOF 
;

// Rule Credential
ruleCredential returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='auth' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCredentialAccess().getAuthKeyword_0());
    }
(
(
		lv_type_1_0=	'credential' 
    {
        newLeafNode(lv_type_1_0, grammarAccess.getCredentialAccess().getTypeCredentialKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCredentialRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_0, "credential");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCredentialAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCredentialRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCredentialAccess().getColonEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCredentialAccess().getCredentialFileEStringParserRuleCall_4_0()); 
	    }
		lv_credentialFile_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCredentialRule());
	        }
       		set(
       			$current, 
       			"credentialFile",
        		lv_credentialFile_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleResource
entryRuleResource returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceRule()); }
	 iv_ruleResource=ruleResource 
	 { $current=$iv_ruleResource.current; } 
	 EOF 
;

// Rule Resource
ruleResource returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='resources' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getResourceAccess().getResourcesKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getResourceAccess().getColonEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceAccess().getCpuCPUParserRuleCall_3_0()); 
	    }
		lv_cpu_3_0=ruleCPU		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceRule());
	        }
       		set(
       			$current, 
       			"cpu",
        		lv_cpu_3_0, 
        		"CPU");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getResourceAccess().getCommaKeyword_4());
    }
(
(
		lv_memory_5_0=RULE_INT
		{
			newLeafNode(lv_memory_5_0, grammarAccess.getResourceAccess().getMemoryINTTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"memory",
        		lv_memory_5_0, 
        		"INT");
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getResourceAccess().getCommaKeyword_6());
    }
(
(
		lv_disk_7_0=RULE_INT
		{
			newLeafNode(lv_disk_7_0, grammarAccess.getResourceAccess().getDiskINTTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"disk",
        		lv_disk_7_0, 
        		"INT");
	    }

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getResourceAccess().getCommaKeyword_8());
    }
(
(
		lv_relax_9_0=RULE_INT
		{
			newLeafNode(lv_relax_9_0, grammarAccess.getResourceAccess().getRelaxINTTerminalRuleCall_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"relax",
        		lv_relax_9_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleDependency
entryRuleDependency returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDependencyRule()); }
	 iv_ruleDependency=ruleDependency 
	 { $current=$iv_ruleDependency.current; } 
	 EOF 
;

// Rule Dependency
ruleDependency returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDependencyAccess().getInstallParserRuleCall_0()); 
    }
    this_Install_0=ruleInstall
    { 
        $current = $this_Install_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDependencyAccess().getServiceParserRuleCall_1()); 
    }
    this_Service_1=ruleService
    { 
        $current = $this_Service_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDependencyAccess().getFileParserRuleCall_2()); 
    }
    this_File_2=ruleFile
    { 
        $current = $this_File_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInstall
entryRuleInstall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstallRule()); }
	 iv_ruleInstall=ruleInstall 
	 { $current=$iv_ruleInstall.current; } 
	 EOF 
;

// Rule Install
ruleInstall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='dependency' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstallAccess().getDependencyKeyword_0());
    }
(
(
		lv_type_1_0=	'install' 
    {
        newLeafNode(lv_type_1_0, grammarAccess.getInstallAccess().getTypeInstallKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstallRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_0, "install");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstallAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstallRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstallAccess().getColonEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstallAccess().getDepNameEStringParserRuleCall_4_0()); 
	    }
		lv_depName_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstallRule());
	        }
       		set(
       			$current, 
       			"depName",
        		lv_depName_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstallAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstallAccess().getDepVersionEFloatParserRuleCall_6_0()); 
	    }
		lv_depVersion_6_0=ruleEFloat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstallRule());
	        }
       		set(
       			$current, 
       			"depVersion",
        		lv_depVersion_6_0, 
        		"EFloat");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleService
entryRuleService returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	 iv_ruleService=ruleService 
	 { $current=$iv_ruleService.current; } 
	 EOF 
;

// Rule Service
ruleService returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='dependency' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getDependencyKeyword_0());
    }
(
(
		lv_type_1_0=	'service' 
    {
        newLeafNode(lv_type_1_0, grammarAccess.getServiceAccess().getTypeServiceKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_0, "service");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceAccess().getSrvActionSrvSignalEnumRuleCall_2_0()); 
	    }
		lv_srvAction_2_0=ruleSrvSignal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceRule());
	        }
       		set(
       			$current, 
       			"srvAction",
        		lv_srvAction_2_0, 
        		"SrvSignal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceAccess().getNameEStringParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getServiceAccess().getColonEqualsSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceAccess().getServiceNameEStringParserRuleCall_5_0()); 
	    }
		lv_serviceName_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceRule());
	        }
       		set(
       			$current, 
       			"serviceName",
        		lv_serviceName_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFile
entryRuleFile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileRule()); }
	 iv_ruleFile=ruleFile 
	 { $current=$iv_ruleFile.current; } 
	 EOF 
;

// Rule File
ruleFile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='dependency' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFileAccess().getDependencyKeyword_0());
    }
(
(
		lv_type_1_0=	'file' 
    {
        newLeafNode(lv_type_1_0, grammarAccess.getFileAccess().getTypeFileKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_0, "file");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFileAccess().getFileTypeFileTypeEnumRuleCall_2_0()); 
	    }
		lv_fileType_2_0=ruleFileType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileRule());
	        }
       		set(
       			$current, 
       			"fileType",
        		lv_fileType_2_0, 
        		"FileType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFileAccess().getNameEStringParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFileAccess().getColonEqualsSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFileAccess().getLocationEStringParserRuleCall_5_0()); 
	    }
		lv_location_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileRule());
	        }
       		set(
       			$current, 
       			"location",
        		lv_location_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleArtifact
entryRuleArtifact returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArtifactRule()); }
	 iv_ruleArtifact=ruleArtifact 
	 { $current=$iv_ruleArtifact.current; } 
	 EOF 
;

// Rule Artifact
ruleArtifact returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getArtifactAccess().getCodeParserRuleCall_0()); 
    }
    this_Code_0=ruleCode
    { 
        $current = $this_Code_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getArtifactAccess().getCodeExternalParserRuleCall_1()); 
    }
    this_CodeExternal_1=ruleCodeExternal
    { 
        $current = $this_CodeExternal_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getArtifactAccess().getScriptParserRuleCall_2()); 
    }
    this_Script_2=ruleScript
    { 
        $current = $this_Script_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getArtifactAccess().getScriptCommandParserRuleCall_3()); 
    }
    this_ScriptCommand_3=ruleScriptCommand
    { 
        $current = $this_ScriptCommand_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getArtifactAccess().getScriptBlockParserRuleCall_4()); 
    }
    this_ScriptBlock_4=ruleScriptBlock
    { 
        $current = $this_ScriptBlock_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConfArtifact
entryRuleConfArtifact returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfArtifactRule()); }
	 iv_ruleConfArtifact=ruleConfArtifact 
	 { $current=$iv_ruleConfArtifact.current; } 
	 EOF 
;

// Rule ConfArtifact
ruleConfArtifact returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConfArtifactAccess().getConfigParserRuleCall_0()); 
    }
    this_Config_0=ruleConfig
    { 
        $current = $this_Config_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConfArtifactAccess().getConfigBlockParserRuleCall_1()); 
    }
    this_ConfigBlock_1=ruleConfigBlock
    { 
        $current = $this_ConfigBlock_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConfig
entryRuleConfig returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigRule()); }
	 iv_ruleConfig=ruleConfig 
	 { $current=$iv_ruleConfig.current; } 
	 EOF 
;

// Rule Config
ruleConfig returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='artifact' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConfigAccess().getArtifactKeyword_0());
    }
(
(
		lv_type_1_0=	'config' 
    {
        newLeafNode(lv_type_1_0, grammarAccess.getConfigAccess().getTypeConfigKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_0, "config");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConfigAccess().getColonEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigAccess().getLocalFileEStringParserRuleCall_4_0()); 
	    }
		lv_localFile_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigRule());
	        }
       		set(
       			$current, 
       			"localFile",
        		lv_localFile_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigAccess().getDestFileEStringParserRuleCall_5_0()); 
	    }
		lv_destFile_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigRule());
	        }
       		set(
       			$current, 
       			"destFile",
        		lv_destFile_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleConfigBlock
entryRuleConfigBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigBlockRule()); }
	 iv_ruleConfigBlock=ruleConfigBlock 
	 { $current=$iv_ruleConfigBlock.current; } 
	 EOF 
;

// Rule ConfigBlock
ruleConfigBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='artifact' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConfigBlockAccess().getArtifactKeyword_0());
    }
(
(
		lv_type_1_0=	'config-block' 
    {
        newLeafNode(lv_type_1_0, grammarAccess.getConfigBlockAccess().getTypeConfigBlockKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigBlockRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_0, "config-block");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigBlockAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigBlockRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConfigBlockAccess().getColonEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigBlockAccess().getDestFileEStringParserRuleCall_4_0()); 
	    }
		lv_destFile_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigBlockRule());
	        }
       		set(
       			$current, 
       			"destFile",
        		lv_destFile_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConfigBlockAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigBlockAccess().getConfigEStringParserRuleCall_6_0()); 
	    }
		lv_config_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigBlockRule());
	        }
       		set(
       			$current, 
       			"config",
        		lv_config_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConfigBlockAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleCode
entryRuleCode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCodeRule()); }
	 iv_ruleCode=ruleCode 
	 { $current=$iv_ruleCode.current; } 
	 EOF 
;

// Rule Code
ruleCode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='artifact' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCodeAccess().getArtifactKeyword_0());
    }
(
(
		lv_type_1_0=	'code' 
    {
        newLeafNode(lv_type_1_0, grammarAccess.getCodeAccess().getTypeCodeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCodeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_0, "code");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCodeAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCodeAccess().getColonEqualsSignKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCodeAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCodeAccess().getCodeEStringParserRuleCall_5_0()); 
	    }
		lv_code_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodeRule());
	        }
       		set(
       			$current, 
       			"code",
        		lv_code_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCodeAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleCodeExternal
entryRuleCodeExternal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCodeExternalRule()); }
	 iv_ruleCodeExternal=ruleCodeExternal 
	 { $current=$iv_ruleCodeExternal.current; } 
	 EOF 
;

// Rule CodeExternal
ruleCodeExternal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='artifact' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCodeExternalAccess().getArtifactKeyword_0());
    }
(
(
		lv_type_1_0=	'code-external' 
    {
        newLeafNode(lv_type_1_0, grammarAccess.getCodeExternalAccess().getTypeCodeExternalKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCodeExternalRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_0, "code-external");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCodeExternalAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodeExternalRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCodeExternalAccess().getColonEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCodeExternalAccess().getClassEStringParserRuleCall_4_0()); 
	    }
		lv_class_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodeExternalRule());
	        }
       		set(
       			$current, 
       			"class",
        		lv_class_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCodeExternalAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCodeExternalAccess().getMethodEStringParserRuleCall_6_0()); 
	    }
		lv_method_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodeExternalRule());
	        }
       		set(
       			$current, 
       			"method",
        		lv_method_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleScript
entryRuleScript returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScriptRule()); }
	 iv_ruleScript=ruleScript 
	 { $current=$iv_ruleScript.current; } 
	 EOF 
;

// Rule Script
ruleScript returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='artifact' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScriptAccess().getArtifactKeyword_0());
    }
(
(
		lv_type_1_0=	'script' 
    {
        newLeafNode(lv_type_1_0, grammarAccess.getScriptAccess().getTypeScriptKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScriptRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_0, "script");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getScriptAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScriptRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getScriptAccess().getColonEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScriptAccess().getScriptFileEStringParserRuleCall_4_0()); 
	    }
		lv_scriptFile_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScriptRule());
	        }
       		set(
       			$current, 
       			"scriptFile",
        		lv_scriptFile_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleScriptCommand
entryRuleScriptCommand returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScriptCommandRule()); }
	 iv_ruleScriptCommand=ruleScriptCommand 
	 { $current=$iv_ruleScriptCommand.current; } 
	 EOF 
;

// Rule ScriptCommand
ruleScriptCommand returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='artifact' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScriptCommandAccess().getArtifactKeyword_0());
    }
(
(
		lv_type_1_0=	'script-command' 
    {
        newLeafNode(lv_type_1_0, grammarAccess.getScriptCommandAccess().getTypeScriptCommandKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScriptCommandRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_0, "script-command");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getScriptCommandAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScriptCommandRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getScriptCommandAccess().getColonEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScriptCommandAccess().getScriptCommandEStringParserRuleCall_4_0()); 
	    }
		lv_scriptCommand_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScriptCommandRule());
	        }
       		set(
       			$current, 
       			"scriptCommand",
        		lv_scriptCommand_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleScriptBlock
entryRuleScriptBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScriptBlockRule()); }
	 iv_ruleScriptBlock=ruleScriptBlock 
	 { $current=$iv_ruleScriptBlock.current; } 
	 EOF 
;

// Rule ScriptBlock
ruleScriptBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='artifact' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScriptBlockAccess().getArtifactKeyword_0());
    }
(
(
		lv_type_1_0=	'script-block' 
    {
        newLeafNode(lv_type_1_0, grammarAccess.getScriptBlockAccess().getTypeScriptBlockKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScriptBlockRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_0, "script-block");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getScriptBlockAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScriptBlockRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getScriptBlockAccess().getColonEqualsSignKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getScriptBlockAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScriptBlockAccess().getBlockEStringParserRuleCall_5_0()); 
	    }
		lv_block_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScriptBlockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getScriptBlockAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleNodeset
entryRuleNodeset returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNodesetRule()); }
	 iv_ruleNodeset=ruleNodeset 
	 { $current=$iv_ruleNodeset.current; } 
	 EOF 
;

// Rule Nodeset
ruleNodeset returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='nodeset' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNodesetAccess().getNodesetKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNodesetAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNodesetRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNodesetAccess().getColonEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNodesetAccess().getRangeEStringParserRuleCall_3_0()); 
	    }
		lv_range_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNodesetRule());
	        }
       		set(
       			$current, 
       			"range",
        		lv_range_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSetup
entryRuleSetup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetupRule()); }
	 iv_ruleSetup=ruleSetup 
	 { $current=$iv_ruleSetup.current; } 
	 EOF 
;

// Rule Setup
ruleSetup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSetupAccess().getSetupAction_0(),
            $current);
    }
)	otherlv_1='setup' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetupAccess().getSetupKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetupAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetupRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSetupAccess().getColonEqualsSignKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetupRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getSetupAccess().getProviderProvidersCrossReference_4_0()); 
	}

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSetupAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetupAccess().getNumberMachinesEIntParserRuleCall_6_0()); 
	    }
		lv_numberMachines_6_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetupRule());
	        }
       		set(
       			$current, 
       			"numberMachines",
        		lv_numberMachines_6_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSetupAccess().getCommaKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetupAccess().getAutoscaleEBooleanParserRuleCall_8_0()); 
	    }
		lv_autoscale_8_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetupRule());
	        }
       		set(
       			$current, 
       			"autoscale",
        		lv_autoscale_8_0, 
        		"EBoolean");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSetupAccess().getCommaKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetupAccess().getPredictiveEBooleanParserRuleCall_10_0()); 
	    }
		lv_predictive_10_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetupRule());
	        }
       		set(
       			$current, 
       			"predictive",
        		lv_predictive_10_0, 
        		"EBoolean");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDeploy
entryRuleDeploy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeployRule()); }
	 iv_ruleDeploy=ruleDeploy 
	 { $current=$iv_ruleDeploy.current; } 
	 EOF 
;

// Rule Deploy
ruleDeploy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='deploy' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeployAccess().getDeployKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeployAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeployRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeployAccess().getColonEqualsSignKeyword_2());
    }
	otherlv_3='in' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeployAccess().getInKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeployRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDeployAccess().getSetupsSetupCrossReference_4_0()); 
	}

)
)*	otherlv_5='timeout' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDeployAccess().getTimeoutKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeployAccess().getTimeoutEIntParserRuleCall_6_0()); 
	    }
		lv_timeout_6_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeployRule());
	        }
       		set(
       			$current, 
       			"timeout",
        		lv_timeout_6_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDeployAccess().getLeftCurlyBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeployAccess().getExecutionsExecutionParserRuleCall_8_0()); 
	    }
		lv_executions_8_0=ruleExecution		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeployRule());
	        }
       		add(
       			$current, 
       			"executions",
        		lv_executions_8_0, 
        		"Execution");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDeployAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleExecution
entryRuleExecution returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExecutionRule()); }
	 iv_ruleExecution=ruleExecution 
	 { $current=$iv_ruleExecution.current; } 
	 EOF 
;

// Rule Execution
ruleExecution returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='exec' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExecutionAccess().getExecKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExecutionAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExecutionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExecutionAccess().getColonEqualsSignKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExecutionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getExecutionAccess().getCodeArtifactCrossReference_3_0()); 
	}

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExecutionAccess().getCommaKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExecutionRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getExecutionAccess().getConfigConfArtifactCrossReference_4_1_0()); 
	}

)
))?	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExecutionAccess().getCommaKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExecutionRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getExecutionAccess().getNodesNodesetCrossReference_6_0()); 
	}

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getExecutionAccess().getCommaKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExecutionAccess().getSeqEIntParserRuleCall_8_0()); 
	    }
		lv_seq_9_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExecutionRule());
	        }
       		set(
       			$current, 
       			"seq",
        		lv_seq_9_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEFloat
entryRuleEFloat returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEFloatRule()); } 
	 iv_ruleEFloat=ruleEFloat 
	 { $current=$iv_ruleEFloat.current.getText(); }  
	 EOF 
;

// Rule EFloat
ruleEFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_0_0()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getFullStopKeyword_0_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_0_2()); 
    }
)
    |    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); } 
	 iv_ruleEBoolean=ruleEBoolean 
	 { $current=$iv_ruleEBoolean.current.getText(); }  
	 EOF 
;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleCPU
entryRuleCPU returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCPURule()); } 
	 iv_ruleCPU=ruleCPU 
	 { $current=$iv_ruleCPU.current.getText(); }  
	 EOF 
;

// Rule CPU
ruleCPU returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getCPUAccess().getINTTerminalRuleCall_0()); 
    }

	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCPUAccess().getAsteriskKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getCPUAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Rule NativeProvType
ruleNativeProvType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='amazon' 
	{
        $current = grammarAccess.getNativeProvTypeAccess().getAmazonEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getNativeProvTypeAccess().getAmazonEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='google' 
	{
        $current = grammarAccess.getNativeProvTypeAccess().getGoogleEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getNativeProvTypeAccess().getGoogleEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='g5000' 
	{
        $current = grammarAccess.getNativeProvTypeAccess().getG5000EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getNativeProvTypeAccess().getG5000EnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='virtualbox' 
	{
        $current = grammarAccess.getNativeProvTypeAccess().getVirtualboxEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getNativeProvTypeAccess().getVirtualboxEnumLiteralDeclaration_3()); 
    }
));



// Rule NativeSO
ruleNativeSO returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
(	enumLiteral_0='linux' 
	{
        $current = grammarAccess.getNativeSOAccess().getLinuxEnumLiteralDeclaration().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getNativeSOAccess().getLinuxEnumLiteralDeclaration()); 
    }
);



// Rule NativeRequirement
ruleNativeRequirement returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='ssh' 
	{
        $current = grammarAccess.getNativeRequirementAccess().getSshEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getNativeRequirementAccess().getSshEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='tomcat' 
	{
        $current = grammarAccess.getNativeRequirementAccess().getTomcatEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getNativeRequirementAccess().getTomcatEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='httpd' 
	{
        $current = grammarAccess.getNativeRequirementAccess().getApacheEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getNativeRequirementAccess().getApacheEnumLiteralDeclaration_2()); 
    }
));



// Rule NativeDistribution
ruleNativeDistribution returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='ubuntu' 
	{
        $current = grammarAccess.getNativeDistributionAccess().getUbuntuEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getNativeDistributionAccess().getUbuntuEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='debian' 
	{
        $current = grammarAccess.getNativeDistributionAccess().getDebianEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getNativeDistributionAccess().getDebianEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='centos' 
	{
        $current = grammarAccess.getNativeDistributionAccess().getCentosEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getNativeDistributionAccess().getCentosEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='fedora' 
	{
        $current = grammarAccess.getNativeDistributionAccess().getFedoraEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getNativeDistributionAccess().getFedoraEnumLiteralDeclaration_3()); 
    }
));



// Rule SrvSignal
ruleSrvSignal returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='start' 
	{
        $current = grammarAccess.getSrvSignalAccess().getStartEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSrvSignalAccess().getStartEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='restart' 
	{
        $current = grammarAccess.getSrvSignalAccess().getRestartEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSrvSignalAccess().getRestartEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='stop' 
	{
        $current = grammarAccess.getSrvSignalAccess().getStopEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSrvSignalAccess().getStopEnumLiteralDeclaration_2()); 
    }
));



// Rule FileType
ruleFileType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='local' 
	{
        $current = grammarAccess.getFileTypeAccess().getLocalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getFileTypeAccess().getLocalEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='remote' 
	{
        $current = grammarAccess.getFileTypeAccess().getRemoteEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getFileTypeAccess().getRemoteEnumLiteralDeclaration_1()); 
    }
));





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


